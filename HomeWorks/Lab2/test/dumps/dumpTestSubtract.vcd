$date
	Thu May  4 10:02:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testSubtract $end
$var wire 4 ! res [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$scope module my_sub $end
$var wire 4 $ a [3:0] $end
$var wire 4 % b [3:0] $end
$var wire 1 & vdd $end
$var wire 4 ' res [3:0] $end
$var wire 4 ( notB [3:0] $end
$var wire 4 ) cout [3:0] $end
$scope module adder0 $end
$var wire 1 * a $end
$var wire 1 + aAndb $end
$var wire 1 , aXorb $end
$var wire 1 - b $end
$var wire 1 & cin $end
$var wire 1 . cinAndaxb $end
$var wire 1 / cout $end
$var wire 1 0 s $end
$scope module and_1 $end
$var wire 1 * a $end
$var wire 1 - b $end
$var wire 1 + out $end
$var wire 1 1 w $end
$scope module my_nand $end
$var wire 1 * a $end
$var wire 1 - b $end
$var wire 1 2 gnd $end
$var wire 1 1 out $end
$var wire 1 3 vdd $end
$var wire 1 4 w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 1 a $end
$var wire 1 5 gnd $end
$var wire 1 + out $end
$var wire 1 6 vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 , a $end
$var wire 1 & b $end
$var wire 1 . out $end
$var wire 1 7 w $end
$scope module my_nand $end
$var wire 1 , a $end
$var wire 1 & b $end
$var wire 1 8 gnd $end
$var wire 1 7 out $end
$var wire 1 9 vdd $end
$var wire 1 : w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 7 a $end
$var wire 1 ; gnd $end
$var wire 1 . out $end
$var wire 1 < vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 + a $end
$var wire 1 . b $end
$var wire 1 / out $end
$var wire 1 = w $end
$scope module my_nor $end
$var wire 1 + a $end
$var wire 1 . b $end
$var wire 1 > gnd $end
$var wire 1 = out $end
$var wire 1 ? vdd $end
$var wire 1 @ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 = a $end
$var wire 1 A gnd $end
$var wire 1 / out $end
$var wire 1 B vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 C AnB $end
$var wire 1 * a $end
$var wire 1 - b $end
$var wire 1 D nAB $end
$var wire 1 E notA $end
$var wire 1 F notB $end
$var wire 1 , out $end
$scope module and_1 $end
$var wire 1 E a $end
$var wire 1 - b $end
$var wire 1 D out $end
$var wire 1 G w $end
$scope module my_nand $end
$var wire 1 E a $end
$var wire 1 - b $end
$var wire 1 H gnd $end
$var wire 1 G out $end
$var wire 1 I vdd $end
$var wire 1 J w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 G a $end
$var wire 1 K gnd $end
$var wire 1 D out $end
$var wire 1 L vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 * a $end
$var wire 1 F b $end
$var wire 1 C out $end
$var wire 1 M w $end
$scope module my_nand $end
$var wire 1 * a $end
$var wire 1 F b $end
$var wire 1 N gnd $end
$var wire 1 M out $end
$var wire 1 O vdd $end
$var wire 1 P w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 M a $end
$var wire 1 Q gnd $end
$var wire 1 C out $end
$var wire 1 R vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 D a $end
$var wire 1 C b $end
$var wire 1 , out $end
$var wire 1 S w $end
$scope module my_nor $end
$var wire 1 D a $end
$var wire 1 C b $end
$var wire 1 T gnd $end
$var wire 1 S out $end
$var wire 1 U vdd $end
$var wire 1 V w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 S a $end
$var wire 1 W gnd $end
$var wire 1 , out $end
$var wire 1 X vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 * a $end
$var wire 1 Y gnd $end
$var wire 1 E out $end
$var wire 1 Z vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 - a $end
$var wire 1 [ gnd $end
$var wire 1 F out $end
$var wire 1 \ vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 ] AnB $end
$var wire 1 , a $end
$var wire 1 & b $end
$var wire 1 ^ nAB $end
$var wire 1 _ notA $end
$var wire 1 ` notB $end
$var wire 1 0 out $end
$scope module and_1 $end
$var wire 1 _ a $end
$var wire 1 & b $end
$var wire 1 ^ out $end
$var wire 1 a w $end
$scope module my_nand $end
$var wire 1 _ a $end
$var wire 1 & b $end
$var wire 1 b gnd $end
$var wire 1 a out $end
$var wire 1 c vdd $end
$var wire 1 d w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 a a $end
$var wire 1 e gnd $end
$var wire 1 ^ out $end
$var wire 1 f vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 , a $end
$var wire 1 ` b $end
$var wire 1 ] out $end
$var wire 1 g w $end
$scope module my_nand $end
$var wire 1 , a $end
$var wire 1 ` b $end
$var wire 1 h gnd $end
$var wire 1 g out $end
$var wire 1 i vdd $end
$var wire 1 j w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 g a $end
$var wire 1 k gnd $end
$var wire 1 ] out $end
$var wire 1 l vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 ^ a $end
$var wire 1 ] b $end
$var wire 1 0 out $end
$var wire 1 m w $end
$scope module my_nor $end
$var wire 1 ^ a $end
$var wire 1 ] b $end
$var wire 1 n gnd $end
$var wire 1 m out $end
$var wire 1 o vdd $end
$var wire 1 p w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 m a $end
$var wire 1 q gnd $end
$var wire 1 0 out $end
$var wire 1 r vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 , a $end
$var wire 1 s gnd $end
$var wire 1 _ out $end
$var wire 1 t vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 & a $end
$var wire 1 u gnd $end
$var wire 1 ` out $end
$var wire 1 v vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 1 w a $end
$var wire 1 x aAndb $end
$var wire 1 y aXorb $end
$var wire 1 z b $end
$var wire 1 { cin $end
$var wire 1 | cinAndaxb $end
$var wire 1 } cout $end
$var wire 1 ~ s $end
$scope module and_1 $end
$var wire 1 w a $end
$var wire 1 z b $end
$var wire 1 x out $end
$var wire 1 !" w $end
$scope module my_nand $end
$var wire 1 w a $end
$var wire 1 z b $end
$var wire 1 "" gnd $end
$var wire 1 !" out $end
$var wire 1 #" vdd $end
$var wire 1 $" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 !" a $end
$var wire 1 %" gnd $end
$var wire 1 x out $end
$var wire 1 &" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 y a $end
$var wire 1 { b $end
$var wire 1 | out $end
$var wire 1 '" w $end
$scope module my_nand $end
$var wire 1 y a $end
$var wire 1 { b $end
$var wire 1 (" gnd $end
$var wire 1 '" out $end
$var wire 1 )" vdd $end
$var wire 1 *" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 '" a $end
$var wire 1 +" gnd $end
$var wire 1 | out $end
$var wire 1 ," vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 x a $end
$var wire 1 | b $end
$var wire 1 } out $end
$var wire 1 -" w $end
$scope module my_nor $end
$var wire 1 x a $end
$var wire 1 | b $end
$var wire 1 ." gnd $end
$var wire 1 -" out $end
$var wire 1 /" vdd $end
$var wire 1 0" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 -" a $end
$var wire 1 1" gnd $end
$var wire 1 } out $end
$var wire 1 2" vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 3" AnB $end
$var wire 1 w a $end
$var wire 1 z b $end
$var wire 1 4" nAB $end
$var wire 1 5" notA $end
$var wire 1 6" notB $end
$var wire 1 y out $end
$scope module and_1 $end
$var wire 1 5" a $end
$var wire 1 z b $end
$var wire 1 4" out $end
$var wire 1 7" w $end
$scope module my_nand $end
$var wire 1 5" a $end
$var wire 1 z b $end
$var wire 1 8" gnd $end
$var wire 1 7" out $end
$var wire 1 9" vdd $end
$var wire 1 :" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 7" a $end
$var wire 1 ;" gnd $end
$var wire 1 4" out $end
$var wire 1 <" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 w a $end
$var wire 1 6" b $end
$var wire 1 3" out $end
$var wire 1 =" w $end
$scope module my_nand $end
$var wire 1 w a $end
$var wire 1 6" b $end
$var wire 1 >" gnd $end
$var wire 1 =" out $end
$var wire 1 ?" vdd $end
$var wire 1 @" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 =" a $end
$var wire 1 A" gnd $end
$var wire 1 3" out $end
$var wire 1 B" vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 4" a $end
$var wire 1 3" b $end
$var wire 1 y out $end
$var wire 1 C" w $end
$scope module my_nor $end
$var wire 1 4" a $end
$var wire 1 3" b $end
$var wire 1 D" gnd $end
$var wire 1 C" out $end
$var wire 1 E" vdd $end
$var wire 1 F" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 C" a $end
$var wire 1 G" gnd $end
$var wire 1 y out $end
$var wire 1 H" vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 w a $end
$var wire 1 I" gnd $end
$var wire 1 5" out $end
$var wire 1 J" vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 z a $end
$var wire 1 K" gnd $end
$var wire 1 6" out $end
$var wire 1 L" vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 M" AnB $end
$var wire 1 y a $end
$var wire 1 { b $end
$var wire 1 N" nAB $end
$var wire 1 O" notA $end
$var wire 1 P" notB $end
$var wire 1 ~ out $end
$scope module and_1 $end
$var wire 1 O" a $end
$var wire 1 { b $end
$var wire 1 N" out $end
$var wire 1 Q" w $end
$scope module my_nand $end
$var wire 1 O" a $end
$var wire 1 { b $end
$var wire 1 R" gnd $end
$var wire 1 Q" out $end
$var wire 1 S" vdd $end
$var wire 1 T" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 Q" a $end
$var wire 1 U" gnd $end
$var wire 1 N" out $end
$var wire 1 V" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 y a $end
$var wire 1 P" b $end
$var wire 1 M" out $end
$var wire 1 W" w $end
$scope module my_nand $end
$var wire 1 y a $end
$var wire 1 P" b $end
$var wire 1 X" gnd $end
$var wire 1 W" out $end
$var wire 1 Y" vdd $end
$var wire 1 Z" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 W" a $end
$var wire 1 [" gnd $end
$var wire 1 M" out $end
$var wire 1 \" vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 N" a $end
$var wire 1 M" b $end
$var wire 1 ~ out $end
$var wire 1 ]" w $end
$scope module my_nor $end
$var wire 1 N" a $end
$var wire 1 M" b $end
$var wire 1 ^" gnd $end
$var wire 1 ]" out $end
$var wire 1 _" vdd $end
$var wire 1 `" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ]" a $end
$var wire 1 a" gnd $end
$var wire 1 ~ out $end
$var wire 1 b" vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 y a $end
$var wire 1 c" gnd $end
$var wire 1 O" out $end
$var wire 1 d" vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 { a $end
$var wire 1 e" gnd $end
$var wire 1 P" out $end
$var wire 1 f" vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 1 g" a $end
$var wire 1 h" aAndb $end
$var wire 1 i" aXorb $end
$var wire 1 j" b $end
$var wire 1 k" cin $end
$var wire 1 l" cinAndaxb $end
$var wire 1 m" cout $end
$var wire 1 n" s $end
$scope module and_1 $end
$var wire 1 g" a $end
$var wire 1 j" b $end
$var wire 1 h" out $end
$var wire 1 o" w $end
$scope module my_nand $end
$var wire 1 g" a $end
$var wire 1 j" b $end
$var wire 1 p" gnd $end
$var wire 1 o" out $end
$var wire 1 q" vdd $end
$var wire 1 r" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 o" a $end
$var wire 1 s" gnd $end
$var wire 1 h" out $end
$var wire 1 t" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 i" a $end
$var wire 1 k" b $end
$var wire 1 l" out $end
$var wire 1 u" w $end
$scope module my_nand $end
$var wire 1 i" a $end
$var wire 1 k" b $end
$var wire 1 v" gnd $end
$var wire 1 u" out $end
$var wire 1 w" vdd $end
$var wire 1 x" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 u" a $end
$var wire 1 y" gnd $end
$var wire 1 l" out $end
$var wire 1 z" vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 h" a $end
$var wire 1 l" b $end
$var wire 1 m" out $end
$var wire 1 {" w $end
$scope module my_nor $end
$var wire 1 h" a $end
$var wire 1 l" b $end
$var wire 1 |" gnd $end
$var wire 1 {" out $end
$var wire 1 }" vdd $end
$var wire 1 ~" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 {" a $end
$var wire 1 !# gnd $end
$var wire 1 m" out $end
$var wire 1 "# vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 ## AnB $end
$var wire 1 g" a $end
$var wire 1 j" b $end
$var wire 1 $# nAB $end
$var wire 1 %# notA $end
$var wire 1 &# notB $end
$var wire 1 i" out $end
$scope module and_1 $end
$var wire 1 %# a $end
$var wire 1 j" b $end
$var wire 1 $# out $end
$var wire 1 '# w $end
$scope module my_nand $end
$var wire 1 %# a $end
$var wire 1 j" b $end
$var wire 1 (# gnd $end
$var wire 1 '# out $end
$var wire 1 )# vdd $end
$var wire 1 *# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 '# a $end
$var wire 1 +# gnd $end
$var wire 1 $# out $end
$var wire 1 ,# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 g" a $end
$var wire 1 &# b $end
$var wire 1 ## out $end
$var wire 1 -# w $end
$scope module my_nand $end
$var wire 1 g" a $end
$var wire 1 &# b $end
$var wire 1 .# gnd $end
$var wire 1 -# out $end
$var wire 1 /# vdd $end
$var wire 1 0# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 -# a $end
$var wire 1 1# gnd $end
$var wire 1 ## out $end
$var wire 1 2# vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 $# a $end
$var wire 1 ## b $end
$var wire 1 i" out $end
$var wire 1 3# w $end
$scope module my_nor $end
$var wire 1 $# a $end
$var wire 1 ## b $end
$var wire 1 4# gnd $end
$var wire 1 3# out $end
$var wire 1 5# vdd $end
$var wire 1 6# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 3# a $end
$var wire 1 7# gnd $end
$var wire 1 i" out $end
$var wire 1 8# vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 g" a $end
$var wire 1 9# gnd $end
$var wire 1 %# out $end
$var wire 1 :# vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 j" a $end
$var wire 1 ;# gnd $end
$var wire 1 &# out $end
$var wire 1 <# vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 =# AnB $end
$var wire 1 i" a $end
$var wire 1 k" b $end
$var wire 1 ># nAB $end
$var wire 1 ?# notA $end
$var wire 1 @# notB $end
$var wire 1 n" out $end
$scope module and_1 $end
$var wire 1 ?# a $end
$var wire 1 k" b $end
$var wire 1 ># out $end
$var wire 1 A# w $end
$scope module my_nand $end
$var wire 1 ?# a $end
$var wire 1 k" b $end
$var wire 1 B# gnd $end
$var wire 1 A# out $end
$var wire 1 C# vdd $end
$var wire 1 D# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 A# a $end
$var wire 1 E# gnd $end
$var wire 1 ># out $end
$var wire 1 F# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 i" a $end
$var wire 1 @# b $end
$var wire 1 =# out $end
$var wire 1 G# w $end
$scope module my_nand $end
$var wire 1 i" a $end
$var wire 1 @# b $end
$var wire 1 H# gnd $end
$var wire 1 G# out $end
$var wire 1 I# vdd $end
$var wire 1 J# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 G# a $end
$var wire 1 K# gnd $end
$var wire 1 =# out $end
$var wire 1 L# vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 ># a $end
$var wire 1 =# b $end
$var wire 1 n" out $end
$var wire 1 M# w $end
$scope module my_nor $end
$var wire 1 ># a $end
$var wire 1 =# b $end
$var wire 1 N# gnd $end
$var wire 1 M# out $end
$var wire 1 O# vdd $end
$var wire 1 P# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 M# a $end
$var wire 1 Q# gnd $end
$var wire 1 n" out $end
$var wire 1 R# vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 i" a $end
$var wire 1 S# gnd $end
$var wire 1 ?# out $end
$var wire 1 T# vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 k" a $end
$var wire 1 U# gnd $end
$var wire 1 @# out $end
$var wire 1 V# vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 1 W# a $end
$var wire 1 X# aAndb $end
$var wire 1 Y# aXorb $end
$var wire 1 Z# b $end
$var wire 1 [# cin $end
$var wire 1 \# cinAndaxb $end
$var wire 1 ]# cout $end
$var wire 1 ^# s $end
$scope module and_1 $end
$var wire 1 W# a $end
$var wire 1 Z# b $end
$var wire 1 X# out $end
$var wire 1 _# w $end
$scope module my_nand $end
$var wire 1 W# a $end
$var wire 1 Z# b $end
$var wire 1 `# gnd $end
$var wire 1 _# out $end
$var wire 1 a# vdd $end
$var wire 1 b# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 _# a $end
$var wire 1 c# gnd $end
$var wire 1 X# out $end
$var wire 1 d# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 Y# a $end
$var wire 1 [# b $end
$var wire 1 \# out $end
$var wire 1 e# w $end
$scope module my_nand $end
$var wire 1 Y# a $end
$var wire 1 [# b $end
$var wire 1 f# gnd $end
$var wire 1 e# out $end
$var wire 1 g# vdd $end
$var wire 1 h# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 e# a $end
$var wire 1 i# gnd $end
$var wire 1 \# out $end
$var wire 1 j# vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 X# a $end
$var wire 1 \# b $end
$var wire 1 ]# out $end
$var wire 1 k# w $end
$scope module my_nor $end
$var wire 1 X# a $end
$var wire 1 \# b $end
$var wire 1 l# gnd $end
$var wire 1 k# out $end
$var wire 1 m# vdd $end
$var wire 1 n# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 k# a $end
$var wire 1 o# gnd $end
$var wire 1 ]# out $end
$var wire 1 p# vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 q# AnB $end
$var wire 1 W# a $end
$var wire 1 Z# b $end
$var wire 1 r# nAB $end
$var wire 1 s# notA $end
$var wire 1 t# notB $end
$var wire 1 Y# out $end
$scope module and_1 $end
$var wire 1 s# a $end
$var wire 1 Z# b $end
$var wire 1 r# out $end
$var wire 1 u# w $end
$scope module my_nand $end
$var wire 1 s# a $end
$var wire 1 Z# b $end
$var wire 1 v# gnd $end
$var wire 1 u# out $end
$var wire 1 w# vdd $end
$var wire 1 x# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 u# a $end
$var wire 1 y# gnd $end
$var wire 1 r# out $end
$var wire 1 z# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 W# a $end
$var wire 1 t# b $end
$var wire 1 q# out $end
$var wire 1 {# w $end
$scope module my_nand $end
$var wire 1 W# a $end
$var wire 1 t# b $end
$var wire 1 |# gnd $end
$var wire 1 {# out $end
$var wire 1 }# vdd $end
$var wire 1 ~# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 {# a $end
$var wire 1 !$ gnd $end
$var wire 1 q# out $end
$var wire 1 "$ vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 r# a $end
$var wire 1 q# b $end
$var wire 1 Y# out $end
$var wire 1 #$ w $end
$scope module my_nor $end
$var wire 1 r# a $end
$var wire 1 q# b $end
$var wire 1 $$ gnd $end
$var wire 1 #$ out $end
$var wire 1 %$ vdd $end
$var wire 1 &$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 #$ a $end
$var wire 1 '$ gnd $end
$var wire 1 Y# out $end
$var wire 1 ($ vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 W# a $end
$var wire 1 )$ gnd $end
$var wire 1 s# out $end
$var wire 1 *$ vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 Z# a $end
$var wire 1 +$ gnd $end
$var wire 1 t# out $end
$var wire 1 ,$ vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 -$ AnB $end
$var wire 1 Y# a $end
$var wire 1 [# b $end
$var wire 1 .$ nAB $end
$var wire 1 /$ notA $end
$var wire 1 0$ notB $end
$var wire 1 ^# out $end
$scope module and_1 $end
$var wire 1 /$ a $end
$var wire 1 [# b $end
$var wire 1 .$ out $end
$var wire 1 1$ w $end
$scope module my_nand $end
$var wire 1 /$ a $end
$var wire 1 [# b $end
$var wire 1 2$ gnd $end
$var wire 1 1$ out $end
$var wire 1 3$ vdd $end
$var wire 1 4$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 1$ a $end
$var wire 1 5$ gnd $end
$var wire 1 .$ out $end
$var wire 1 6$ vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 Y# a $end
$var wire 1 0$ b $end
$var wire 1 -$ out $end
$var wire 1 7$ w $end
$scope module my_nand $end
$var wire 1 Y# a $end
$var wire 1 0$ b $end
$var wire 1 8$ gnd $end
$var wire 1 7$ out $end
$var wire 1 9$ vdd $end
$var wire 1 :$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 7$ a $end
$var wire 1 ;$ gnd $end
$var wire 1 -$ out $end
$var wire 1 <$ vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 .$ a $end
$var wire 1 -$ b $end
$var wire 1 ^# out $end
$var wire 1 =$ w $end
$scope module my_nor $end
$var wire 1 .$ a $end
$var wire 1 -$ b $end
$var wire 1 >$ gnd $end
$var wire 1 =$ out $end
$var wire 1 ?$ vdd $end
$var wire 1 @$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 =$ a $end
$var wire 1 A$ gnd $end
$var wire 1 ^# out $end
$var wire 1 B$ vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 Y# a $end
$var wire 1 C$ gnd $end
$var wire 1 /$ out $end
$var wire 1 D$ vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 [# a $end
$var wire 1 E$ gnd $end
$var wire 1 0$ out $end
$var wire 1 F$ vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module not_b $end
$var wire 4 G$ a [3:0] $end
$var wire 4 H$ res [3:0] $end
$scope module not_0 $end
$var wire 1 I$ a $end
$var wire 1 J$ gnd $end
$var wire 1 K$ out $end
$var wire 1 L$ vdd $end
$upscope $end
$scope module not_1 $end
$var wire 1 M$ a $end
$var wire 1 N$ gnd $end
$var wire 1 O$ out $end
$var wire 1 P$ vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 Q$ a $end
$var wire 1 R$ gnd $end
$var wire 1 S$ out $end
$var wire 1 T$ vdd $end
$upscope $end
$scope module not_3 $end
$var wire 1 U$ a $end
$var wire 1 V$ gnd $end
$var wire 1 W$ out $end
$var wire 1 X$ vdd $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1X$
1W$
0V$
0U$
1T$
1S$
0R$
0Q$
1P$
1O$
0N$
0M$
1L$
1K$
0J$
0I$
b1111 H$
b0 G$
1F$
0E$
1D$
0C$
1B$
0A$
1@$
1?$
0>$
1=$
1<$
0;$
0:$
19$
08$
17$
16$
05$
z4$
13$
02$
11$
00$
0/$
0.$
0-$
1,$
0+$
1*$
0)$
1($
0'$
z&$
1%$
0$$
0#$
1"$
0!$
z~#
1}#
0|#
1{#
1z#
0y#
0x#
1w#
0v#
0u#
0t#
1s#
1r#
0q#
1p#
0o#
1n#
1m#
0l#
0k#
1j#
0i#
0h#
1g#
0f#
0e#
1d#
0c#
zb#
1a#
0`#
1_#
0^#
1]#
1\#
1[#
1Z#
1Y#
0X#
0W#
1V#
0U#
1T#
0S#
1R#
0Q#
1P#
1O#
0N#
1M#
1L#
0K#
0J#
1I#
0H#
1G#
1F#
0E#
zD#
1C#
0B#
1A#
0@#
0?#
0>#
0=#
1<#
0;#
1:#
09#
18#
07#
z6#
15#
04#
03#
12#
01#
z0#
1/#
0.#
1-#
1,#
0+#
0*#
1)#
0(#
0'#
0&#
1%#
1$#
0##
1"#
0!#
1~"
1}"
0|"
0{"
1z"
0y"
0x"
1w"
0v"
0u"
1t"
0s"
zr"
1q"
0p"
1o"
0n"
1m"
1l"
1k"
1j"
1i"
0h"
0g"
1f"
0e"
1d"
0c"
1b"
0a"
1`"
1_"
0^"
1]"
1\"
0["
0Z"
1Y"
0X"
1W"
1V"
0U"
zT"
1S"
0R"
1Q"
0P"
0O"
0N"
0M"
1L"
0K"
1J"
0I"
1H"
0G"
zF"
1E"
0D"
0C"
1B"
0A"
z@"
1?"
0>"
1="
1<"
0;"
0:"
19"
08"
07"
06"
15"
14"
03"
12"
01"
10"
1/"
0."
0-"
1,"
0+"
0*"
1)"
0("
0'"
1&"
0%"
z$"
1#"
0""
1!"
0~
1}
1|
1{
1z
1y
0x
0w
1v
0u
1t
0s
1r
0q
1p
1o
0n
1m
1l
0k
0j
1i
0h
1g
1f
0e
zd
1c
0b
1a
0`
0_
0^
0]
1\
0[
1Z
0Y
1X
0W
zV
1U
0T
0S
1R
0Q
zP
1O
0N
1M
1L
0K
0J
1I
0H
0G
0F
1E
1D
0C
1B
0A
1@
1?
0>
0=
1<
0;
0:
19
08
07
16
05
z4
13
02
11
00
1/
1.
1-
1,
0+
0*
b1111 )
b1111 (
b0 '
1&
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
1@#
0k"
0}
1-"
0|
1'"
1~
0]"
1M"
0W"
1P"
0{
1V
0/
1=
0.
17
z:
zj
zp
10
0m
1^
0a
0d
1_
0,
1S
0D
1G
1F
0-
b1110 (
b1110 H$
0K$
1I$
z~"
1h"
0o"
0r"
00#
16#
b1100 )
1m"
0{"
0l"
1u"
zx"
zJ#
1P#
b11 !
b11 '
0n"
1M#
0>#
1A#
0D#
1?#
0i"
13#
0$#
1'#
z*#
0%#
1g"
b1 #
b1 %
b1 G$
b100 "
b100 $
