$date
	Thu May  4 15:04:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testMux2to1 $end
$var wire 4 ! res [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 1 $ ctrl $end
$scope module my_mux $end
$var wire 1 $ control $end
$var wire 4 % op0 [3:0] $end
$var wire 4 & op1 [3:0] $end
$var wire 4 ' res [3:0] $end
$var wire 2 ( a3 [1:0] $end
$var wire 2 ) a2 [1:0] $end
$var wire 2 * a1 [1:0] $end
$var wire 2 + a0 [1:0] $end
$scope module mux_0th $end
$var wire 2 , a [1:0] $end
$var wire 1 - and0 $end
$var wire 1 . and1 $end
$var wire 1 $ control $end
$var wire 1 / not_control $end
$var wire 1 0 res $end
$scope module and_0 $end
$var wire 1 1 a $end
$var wire 1 / b $end
$var wire 1 - out $end
$var wire 1 2 w $end
$scope module my_nand $end
$var wire 1 1 a $end
$var wire 1 / b $end
$var wire 1 3 gnd $end
$var wire 1 2 out $end
$var wire 1 4 vdd $end
$var wire 1 5 w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 2 a $end
$var wire 1 6 gnd $end
$var wire 1 - out $end
$var wire 1 7 vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 8 a $end
$var wire 1 $ b $end
$var wire 1 . out $end
$var wire 1 9 w $end
$scope module my_nand $end
$var wire 1 8 a $end
$var wire 1 $ b $end
$var wire 1 : gnd $end
$var wire 1 9 out $end
$var wire 1 ; vdd $end
$var wire 1 < w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 9 a $end
$var wire 1 = gnd $end
$var wire 1 . out $end
$var wire 1 > vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 $ a $end
$var wire 1 ? gnd $end
$var wire 1 / out $end
$var wire 1 @ vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 0 out $end
$var wire 1 A w $end
$scope module my_nor $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 B gnd $end
$var wire 1 A out $end
$var wire 1 C vdd $end
$var wire 1 D w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 A a $end
$var wire 1 E gnd $end
$var wire 1 0 out $end
$var wire 1 F vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_1th $end
$var wire 2 G a [1:0] $end
$var wire 1 H and0 $end
$var wire 1 I and1 $end
$var wire 1 $ control $end
$var wire 1 J not_control $end
$var wire 1 K res $end
$scope module and_0 $end
$var wire 1 L a $end
$var wire 1 J b $end
$var wire 1 H out $end
$var wire 1 M w $end
$scope module my_nand $end
$var wire 1 L a $end
$var wire 1 J b $end
$var wire 1 N gnd $end
$var wire 1 M out $end
$var wire 1 O vdd $end
$var wire 1 P w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 M a $end
$var wire 1 Q gnd $end
$var wire 1 H out $end
$var wire 1 R vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 S a $end
$var wire 1 $ b $end
$var wire 1 I out $end
$var wire 1 T w $end
$scope module my_nand $end
$var wire 1 S a $end
$var wire 1 $ b $end
$var wire 1 U gnd $end
$var wire 1 T out $end
$var wire 1 V vdd $end
$var wire 1 W w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 T a $end
$var wire 1 X gnd $end
$var wire 1 I out $end
$var wire 1 Y vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 $ a $end
$var wire 1 Z gnd $end
$var wire 1 J out $end
$var wire 1 [ vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 K out $end
$var wire 1 \ w $end
$scope module my_nor $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 ] gnd $end
$var wire 1 \ out $end
$var wire 1 ^ vdd $end
$var wire 1 _ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 \ a $end
$var wire 1 ` gnd $end
$var wire 1 K out $end
$var wire 1 a vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_2th $end
$var wire 2 b a [1:0] $end
$var wire 1 c and0 $end
$var wire 1 d and1 $end
$var wire 1 $ control $end
$var wire 1 e not_control $end
$var wire 1 f res $end
$scope module and_0 $end
$var wire 1 g a $end
$var wire 1 e b $end
$var wire 1 c out $end
$var wire 1 h w $end
$scope module my_nand $end
$var wire 1 g a $end
$var wire 1 e b $end
$var wire 1 i gnd $end
$var wire 1 h out $end
$var wire 1 j vdd $end
$var wire 1 k w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 h a $end
$var wire 1 l gnd $end
$var wire 1 c out $end
$var wire 1 m vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 n a $end
$var wire 1 $ b $end
$var wire 1 d out $end
$var wire 1 o w $end
$scope module my_nand $end
$var wire 1 n a $end
$var wire 1 $ b $end
$var wire 1 p gnd $end
$var wire 1 o out $end
$var wire 1 q vdd $end
$var wire 1 r w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 o a $end
$var wire 1 s gnd $end
$var wire 1 d out $end
$var wire 1 t vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 $ a $end
$var wire 1 u gnd $end
$var wire 1 e out $end
$var wire 1 v vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 f out $end
$var wire 1 w w $end
$scope module my_nor $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 x gnd $end
$var wire 1 w out $end
$var wire 1 y vdd $end
$var wire 1 z w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 w a $end
$var wire 1 { gnd $end
$var wire 1 f out $end
$var wire 1 | vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_3th $end
$var wire 2 } a [1:0] $end
$var wire 1 ~ and0 $end
$var wire 1 !" and1 $end
$var wire 1 $ control $end
$var wire 1 "" not_control $end
$var wire 1 #" res $end
$scope module and_0 $end
$var wire 1 $" a $end
$var wire 1 "" b $end
$var wire 1 ~ out $end
$var wire 1 %" w $end
$scope module my_nand $end
$var wire 1 $" a $end
$var wire 1 "" b $end
$var wire 1 &" gnd $end
$var wire 1 %" out $end
$var wire 1 '" vdd $end
$var wire 1 (" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 %" a $end
$var wire 1 )" gnd $end
$var wire 1 ~ out $end
$var wire 1 *" vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 +" a $end
$var wire 1 $ b $end
$var wire 1 !" out $end
$var wire 1 ," w $end
$scope module my_nand $end
$var wire 1 +" a $end
$var wire 1 $ b $end
$var wire 1 -" gnd $end
$var wire 1 ," out $end
$var wire 1 ." vdd $end
$var wire 1 /" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ," a $end
$var wire 1 0" gnd $end
$var wire 1 !" out $end
$var wire 1 1" vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 $ a $end
$var wire 1 2" gnd $end
$var wire 1 "" out $end
$var wire 1 3" vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 #" out $end
$var wire 1 4" w $end
$scope module my_nor $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 5" gnd $end
$var wire 1 4" out $end
$var wire 1 6" vdd $end
$var wire 1 7" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 4" a $end
$var wire 1 8" gnd $end
$var wire 1 #" out $end
$var wire 1 9" vdd $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
19"
08"
17"
16"
05"
14"
13"
02"
11"
00"
0/"
1."
0-"
1,"
1+"
1*"
0)"
z("
1'"
0&"
1%"
0$"
0#"
1""
0!"
0~
b10 }
1|
0{
zz
1y
0x
0w
1v
0u
1t
0s
zr
1q
0p
1o
0n
1m
0l
0k
1j
0i
0h
1g
1f
1e
0d
1c
b1 b
1a
0`
1_
1^
0]
1\
1[
0Z
1Y
0X
0W
1V
0U
1T
1S
1R
0Q
zP
1O
0N
1M
0L
0K
1J
0I
0H
b10 G
1F
0E
zD
1C
0B
0A
1@
0?
1>
0=
z<
1;
0:
19
08
17
06
05
14
03
02
11
10
1/
0.
1-
b1 ,
b1 +
b10 *
b1 )
b10 (
b101 '
b1010 &
b101 %
0$
b1010 #
b101 "
b101 !
$end
#5
1D
00
1A
0-
12
0/
1K
0\
1I
0T
0J
1z
0f
1w
0c
1h
0e
b1010 !
b1010 '
1#"
04"
1!"
0,"
0""
1$
