$date
	Thu May  4 15:20:13 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testAlu $end
$var wire 4 ! res [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 3 $ control [2:0] $end
$var integer 32 % i [31:0] $end
$scope module my_alu $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 3 ( control [2:0] $end
$var wire 4 ) zeroExRes [3:0] $end
$var wire 4 * res [3:0] $end
$var wire 4 + orRes [3:0] $end
$var wire 4 , muxB [3:0] $end
$var wire 4 - invertB [3:0] $end
$var wire 4 . andRes [3:0] $end
$var wire 4 / adderRes [3:0] $end
$scope module adder_res $end
$var wire 4 0 a [3:0] $end
$var wire 1 1 cin $end
$var wire 4 2 res [3:0] $end
$var wire 4 3 cout [3:0] $end
$var wire 4 4 b [3:0] $end
$scope module adder0 $end
$var wire 1 5 a $end
$var wire 1 6 aAndb $end
$var wire 1 7 aXorb $end
$var wire 1 8 b $end
$var wire 1 1 cin $end
$var wire 1 9 cinAndaxb $end
$var wire 1 : cout $end
$var wire 1 ; s $end
$scope module and_1 $end
$var wire 1 5 a $end
$var wire 1 8 b $end
$var wire 1 6 out $end
$var wire 1 < w $end
$scope module my_nand $end
$var wire 1 5 a $end
$var wire 1 8 b $end
$var wire 1 = gnd $end
$var wire 1 < out $end
$var wire 1 > vdd $end
$var wire 1 ? w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 < a $end
$var wire 1 @ gnd $end
$var wire 1 6 out $end
$var wire 1 A vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 7 a $end
$var wire 1 1 b $end
$var wire 1 9 out $end
$var wire 1 B w $end
$scope module my_nand $end
$var wire 1 7 a $end
$var wire 1 1 b $end
$var wire 1 C gnd $end
$var wire 1 B out $end
$var wire 1 D vdd $end
$var wire 1 E w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 B a $end
$var wire 1 F gnd $end
$var wire 1 9 out $end
$var wire 1 G vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 6 a $end
$var wire 1 9 b $end
$var wire 1 : out $end
$var wire 1 H w $end
$scope module my_nor $end
$var wire 1 6 a $end
$var wire 1 9 b $end
$var wire 1 I gnd $end
$var wire 1 H out $end
$var wire 1 J vdd $end
$var wire 1 K w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 H a $end
$var wire 1 L gnd $end
$var wire 1 : out $end
$var wire 1 M vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 N AnB $end
$var wire 1 5 a $end
$var wire 1 8 b $end
$var wire 1 O nAB $end
$var wire 1 P notA $end
$var wire 1 Q notB $end
$var wire 1 7 out $end
$scope module and_1 $end
$var wire 1 P a $end
$var wire 1 8 b $end
$var wire 1 O out $end
$var wire 1 R w $end
$scope module my_nand $end
$var wire 1 P a $end
$var wire 1 8 b $end
$var wire 1 S gnd $end
$var wire 1 R out $end
$var wire 1 T vdd $end
$var wire 1 U w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 R a $end
$var wire 1 V gnd $end
$var wire 1 O out $end
$var wire 1 W vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 5 a $end
$var wire 1 Q b $end
$var wire 1 N out $end
$var wire 1 X w $end
$scope module my_nand $end
$var wire 1 5 a $end
$var wire 1 Q b $end
$var wire 1 Y gnd $end
$var wire 1 X out $end
$var wire 1 Z vdd $end
$var wire 1 [ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 X a $end
$var wire 1 \ gnd $end
$var wire 1 N out $end
$var wire 1 ] vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 O a $end
$var wire 1 N b $end
$var wire 1 7 out $end
$var wire 1 ^ w $end
$scope module my_nor $end
$var wire 1 O a $end
$var wire 1 N b $end
$var wire 1 _ gnd $end
$var wire 1 ^ out $end
$var wire 1 ` vdd $end
$var wire 1 a w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ^ a $end
$var wire 1 b gnd $end
$var wire 1 7 out $end
$var wire 1 c vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 5 a $end
$var wire 1 d gnd $end
$var wire 1 P out $end
$var wire 1 e vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 8 a $end
$var wire 1 f gnd $end
$var wire 1 Q out $end
$var wire 1 g vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 h AnB $end
$var wire 1 7 a $end
$var wire 1 1 b $end
$var wire 1 i nAB $end
$var wire 1 j notA $end
$var wire 1 k notB $end
$var wire 1 ; out $end
$scope module and_1 $end
$var wire 1 j a $end
$var wire 1 1 b $end
$var wire 1 i out $end
$var wire 1 l w $end
$scope module my_nand $end
$var wire 1 j a $end
$var wire 1 1 b $end
$var wire 1 m gnd $end
$var wire 1 l out $end
$var wire 1 n vdd $end
$var wire 1 o w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 l a $end
$var wire 1 p gnd $end
$var wire 1 i out $end
$var wire 1 q vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 7 a $end
$var wire 1 k b $end
$var wire 1 h out $end
$var wire 1 r w $end
$scope module my_nand $end
$var wire 1 7 a $end
$var wire 1 k b $end
$var wire 1 s gnd $end
$var wire 1 r out $end
$var wire 1 t vdd $end
$var wire 1 u w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 r a $end
$var wire 1 v gnd $end
$var wire 1 h out $end
$var wire 1 w vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 i a $end
$var wire 1 h b $end
$var wire 1 ; out $end
$var wire 1 x w $end
$scope module my_nor $end
$var wire 1 i a $end
$var wire 1 h b $end
$var wire 1 y gnd $end
$var wire 1 x out $end
$var wire 1 z vdd $end
$var wire 1 { w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 x a $end
$var wire 1 | gnd $end
$var wire 1 ; out $end
$var wire 1 } vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 7 a $end
$var wire 1 ~ gnd $end
$var wire 1 j out $end
$var wire 1 !" vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 1 a $end
$var wire 1 "" gnd $end
$var wire 1 k out $end
$var wire 1 #" vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 1 $" a $end
$var wire 1 %" aAndb $end
$var wire 1 &" aXorb $end
$var wire 1 '" b $end
$var wire 1 (" cin $end
$var wire 1 )" cinAndaxb $end
$var wire 1 *" cout $end
$var wire 1 +" s $end
$scope module and_1 $end
$var wire 1 $" a $end
$var wire 1 '" b $end
$var wire 1 %" out $end
$var wire 1 ," w $end
$scope module my_nand $end
$var wire 1 $" a $end
$var wire 1 '" b $end
$var wire 1 -" gnd $end
$var wire 1 ," out $end
$var wire 1 ." vdd $end
$var wire 1 /" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ," a $end
$var wire 1 0" gnd $end
$var wire 1 %" out $end
$var wire 1 1" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 &" a $end
$var wire 1 (" b $end
$var wire 1 )" out $end
$var wire 1 2" w $end
$scope module my_nand $end
$var wire 1 &" a $end
$var wire 1 (" b $end
$var wire 1 3" gnd $end
$var wire 1 2" out $end
$var wire 1 4" vdd $end
$var wire 1 5" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 2" a $end
$var wire 1 6" gnd $end
$var wire 1 )" out $end
$var wire 1 7" vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 %" a $end
$var wire 1 )" b $end
$var wire 1 *" out $end
$var wire 1 8" w $end
$scope module my_nor $end
$var wire 1 %" a $end
$var wire 1 )" b $end
$var wire 1 9" gnd $end
$var wire 1 8" out $end
$var wire 1 :" vdd $end
$var wire 1 ;" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 8" a $end
$var wire 1 <" gnd $end
$var wire 1 *" out $end
$var wire 1 =" vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 >" AnB $end
$var wire 1 $" a $end
$var wire 1 '" b $end
$var wire 1 ?" nAB $end
$var wire 1 @" notA $end
$var wire 1 A" notB $end
$var wire 1 &" out $end
$scope module and_1 $end
$var wire 1 @" a $end
$var wire 1 '" b $end
$var wire 1 ?" out $end
$var wire 1 B" w $end
$scope module my_nand $end
$var wire 1 @" a $end
$var wire 1 '" b $end
$var wire 1 C" gnd $end
$var wire 1 B" out $end
$var wire 1 D" vdd $end
$var wire 1 E" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 B" a $end
$var wire 1 F" gnd $end
$var wire 1 ?" out $end
$var wire 1 G" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 $" a $end
$var wire 1 A" b $end
$var wire 1 >" out $end
$var wire 1 H" w $end
$scope module my_nand $end
$var wire 1 $" a $end
$var wire 1 A" b $end
$var wire 1 I" gnd $end
$var wire 1 H" out $end
$var wire 1 J" vdd $end
$var wire 1 K" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 H" a $end
$var wire 1 L" gnd $end
$var wire 1 >" out $end
$var wire 1 M" vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 ?" a $end
$var wire 1 >" b $end
$var wire 1 &" out $end
$var wire 1 N" w $end
$scope module my_nor $end
$var wire 1 ?" a $end
$var wire 1 >" b $end
$var wire 1 O" gnd $end
$var wire 1 N" out $end
$var wire 1 P" vdd $end
$var wire 1 Q" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 N" a $end
$var wire 1 R" gnd $end
$var wire 1 &" out $end
$var wire 1 S" vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 $" a $end
$var wire 1 T" gnd $end
$var wire 1 @" out $end
$var wire 1 U" vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 '" a $end
$var wire 1 V" gnd $end
$var wire 1 A" out $end
$var wire 1 W" vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 X" AnB $end
$var wire 1 &" a $end
$var wire 1 (" b $end
$var wire 1 Y" nAB $end
$var wire 1 Z" notA $end
$var wire 1 [" notB $end
$var wire 1 +" out $end
$scope module and_1 $end
$var wire 1 Z" a $end
$var wire 1 (" b $end
$var wire 1 Y" out $end
$var wire 1 \" w $end
$scope module my_nand $end
$var wire 1 Z" a $end
$var wire 1 (" b $end
$var wire 1 ]" gnd $end
$var wire 1 \" out $end
$var wire 1 ^" vdd $end
$var wire 1 _" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 \" a $end
$var wire 1 `" gnd $end
$var wire 1 Y" out $end
$var wire 1 a" vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 &" a $end
$var wire 1 [" b $end
$var wire 1 X" out $end
$var wire 1 b" w $end
$scope module my_nand $end
$var wire 1 &" a $end
$var wire 1 [" b $end
$var wire 1 c" gnd $end
$var wire 1 b" out $end
$var wire 1 d" vdd $end
$var wire 1 e" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 b" a $end
$var wire 1 f" gnd $end
$var wire 1 X" out $end
$var wire 1 g" vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 Y" a $end
$var wire 1 X" b $end
$var wire 1 +" out $end
$var wire 1 h" w $end
$scope module my_nor $end
$var wire 1 Y" a $end
$var wire 1 X" b $end
$var wire 1 i" gnd $end
$var wire 1 h" out $end
$var wire 1 j" vdd $end
$var wire 1 k" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 h" a $end
$var wire 1 l" gnd $end
$var wire 1 +" out $end
$var wire 1 m" vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 &" a $end
$var wire 1 n" gnd $end
$var wire 1 Z" out $end
$var wire 1 o" vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 (" a $end
$var wire 1 p" gnd $end
$var wire 1 [" out $end
$var wire 1 q" vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 1 r" a $end
$var wire 1 s" aAndb $end
$var wire 1 t" aXorb $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" cinAndaxb $end
$var wire 1 x" cout $end
$var wire 1 y" s $end
$scope module and_1 $end
$var wire 1 r" a $end
$var wire 1 u" b $end
$var wire 1 s" out $end
$var wire 1 z" w $end
$scope module my_nand $end
$var wire 1 r" a $end
$var wire 1 u" b $end
$var wire 1 {" gnd $end
$var wire 1 z" out $end
$var wire 1 |" vdd $end
$var wire 1 }" w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 z" a $end
$var wire 1 ~" gnd $end
$var wire 1 s" out $end
$var wire 1 !# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 t" a $end
$var wire 1 v" b $end
$var wire 1 w" out $end
$var wire 1 "# w $end
$scope module my_nand $end
$var wire 1 t" a $end
$var wire 1 v" b $end
$var wire 1 ## gnd $end
$var wire 1 "# out $end
$var wire 1 $# vdd $end
$var wire 1 %# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 "# a $end
$var wire 1 &# gnd $end
$var wire 1 w" out $end
$var wire 1 '# vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 s" a $end
$var wire 1 w" b $end
$var wire 1 x" out $end
$var wire 1 (# w $end
$scope module my_nor $end
$var wire 1 s" a $end
$var wire 1 w" b $end
$var wire 1 )# gnd $end
$var wire 1 (# out $end
$var wire 1 *# vdd $end
$var wire 1 +# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 (# a $end
$var wire 1 ,# gnd $end
$var wire 1 x" out $end
$var wire 1 -# vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 .# AnB $end
$var wire 1 r" a $end
$var wire 1 u" b $end
$var wire 1 /# nAB $end
$var wire 1 0# notA $end
$var wire 1 1# notB $end
$var wire 1 t" out $end
$scope module and_1 $end
$var wire 1 0# a $end
$var wire 1 u" b $end
$var wire 1 /# out $end
$var wire 1 2# w $end
$scope module my_nand $end
$var wire 1 0# a $end
$var wire 1 u" b $end
$var wire 1 3# gnd $end
$var wire 1 2# out $end
$var wire 1 4# vdd $end
$var wire 1 5# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 2# a $end
$var wire 1 6# gnd $end
$var wire 1 /# out $end
$var wire 1 7# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 r" a $end
$var wire 1 1# b $end
$var wire 1 .# out $end
$var wire 1 8# w $end
$scope module my_nand $end
$var wire 1 r" a $end
$var wire 1 1# b $end
$var wire 1 9# gnd $end
$var wire 1 8# out $end
$var wire 1 :# vdd $end
$var wire 1 ;# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 8# a $end
$var wire 1 <# gnd $end
$var wire 1 .# out $end
$var wire 1 =# vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 /# a $end
$var wire 1 .# b $end
$var wire 1 t" out $end
$var wire 1 ># w $end
$scope module my_nor $end
$var wire 1 /# a $end
$var wire 1 .# b $end
$var wire 1 ?# gnd $end
$var wire 1 ># out $end
$var wire 1 @# vdd $end
$var wire 1 A# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ># a $end
$var wire 1 B# gnd $end
$var wire 1 t" out $end
$var wire 1 C# vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 r" a $end
$var wire 1 D# gnd $end
$var wire 1 0# out $end
$var wire 1 E# vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 u" a $end
$var wire 1 F# gnd $end
$var wire 1 1# out $end
$var wire 1 G# vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 H# AnB $end
$var wire 1 t" a $end
$var wire 1 v" b $end
$var wire 1 I# nAB $end
$var wire 1 J# notA $end
$var wire 1 K# notB $end
$var wire 1 y" out $end
$scope module and_1 $end
$var wire 1 J# a $end
$var wire 1 v" b $end
$var wire 1 I# out $end
$var wire 1 L# w $end
$scope module my_nand $end
$var wire 1 J# a $end
$var wire 1 v" b $end
$var wire 1 M# gnd $end
$var wire 1 L# out $end
$var wire 1 N# vdd $end
$var wire 1 O# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 L# a $end
$var wire 1 P# gnd $end
$var wire 1 I# out $end
$var wire 1 Q# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 t" a $end
$var wire 1 K# b $end
$var wire 1 H# out $end
$var wire 1 R# w $end
$scope module my_nand $end
$var wire 1 t" a $end
$var wire 1 K# b $end
$var wire 1 S# gnd $end
$var wire 1 R# out $end
$var wire 1 T# vdd $end
$var wire 1 U# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 R# a $end
$var wire 1 V# gnd $end
$var wire 1 H# out $end
$var wire 1 W# vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 I# a $end
$var wire 1 H# b $end
$var wire 1 y" out $end
$var wire 1 X# w $end
$scope module my_nor $end
$var wire 1 I# a $end
$var wire 1 H# b $end
$var wire 1 Y# gnd $end
$var wire 1 X# out $end
$var wire 1 Z# vdd $end
$var wire 1 [# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 X# a $end
$var wire 1 \# gnd $end
$var wire 1 y" out $end
$var wire 1 ]# vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 t" a $end
$var wire 1 ^# gnd $end
$var wire 1 J# out $end
$var wire 1 _# vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 v" a $end
$var wire 1 `# gnd $end
$var wire 1 K# out $end
$var wire 1 a# vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 1 b# a $end
$var wire 1 c# aAndb $end
$var wire 1 d# aXorb $end
$var wire 1 e# b $end
$var wire 1 f# cin $end
$var wire 1 g# cinAndaxb $end
$var wire 1 h# cout $end
$var wire 1 i# s $end
$scope module and_1 $end
$var wire 1 b# a $end
$var wire 1 e# b $end
$var wire 1 c# out $end
$var wire 1 j# w $end
$scope module my_nand $end
$var wire 1 b# a $end
$var wire 1 e# b $end
$var wire 1 k# gnd $end
$var wire 1 j# out $end
$var wire 1 l# vdd $end
$var wire 1 m# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 j# a $end
$var wire 1 n# gnd $end
$var wire 1 c# out $end
$var wire 1 o# vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 d# a $end
$var wire 1 f# b $end
$var wire 1 g# out $end
$var wire 1 p# w $end
$scope module my_nand $end
$var wire 1 d# a $end
$var wire 1 f# b $end
$var wire 1 q# gnd $end
$var wire 1 p# out $end
$var wire 1 r# vdd $end
$var wire 1 s# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 p# a $end
$var wire 1 t# gnd $end
$var wire 1 g# out $end
$var wire 1 u# vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 c# a $end
$var wire 1 g# b $end
$var wire 1 h# out $end
$var wire 1 v# w $end
$scope module my_nor $end
$var wire 1 c# a $end
$var wire 1 g# b $end
$var wire 1 w# gnd $end
$var wire 1 v# out $end
$var wire 1 x# vdd $end
$var wire 1 y# w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 v# a $end
$var wire 1 z# gnd $end
$var wire 1 h# out $end
$var wire 1 {# vdd $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var wire 1 |# AnB $end
$var wire 1 b# a $end
$var wire 1 e# b $end
$var wire 1 }# nAB $end
$var wire 1 ~# notA $end
$var wire 1 !$ notB $end
$var wire 1 d# out $end
$scope module and_1 $end
$var wire 1 ~# a $end
$var wire 1 e# b $end
$var wire 1 }# out $end
$var wire 1 "$ w $end
$scope module my_nand $end
$var wire 1 ~# a $end
$var wire 1 e# b $end
$var wire 1 #$ gnd $end
$var wire 1 "$ out $end
$var wire 1 $$ vdd $end
$var wire 1 %$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 "$ a $end
$var wire 1 &$ gnd $end
$var wire 1 }# out $end
$var wire 1 '$ vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 b# a $end
$var wire 1 !$ b $end
$var wire 1 |# out $end
$var wire 1 ($ w $end
$scope module my_nand $end
$var wire 1 b# a $end
$var wire 1 !$ b $end
$var wire 1 )$ gnd $end
$var wire 1 ($ out $end
$var wire 1 *$ vdd $end
$var wire 1 +$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ($ a $end
$var wire 1 ,$ gnd $end
$var wire 1 |# out $end
$var wire 1 -$ vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 }# a $end
$var wire 1 |# b $end
$var wire 1 d# out $end
$var wire 1 .$ w $end
$scope module my_nor $end
$var wire 1 }# a $end
$var wire 1 |# b $end
$var wire 1 /$ gnd $end
$var wire 1 .$ out $end
$var wire 1 0$ vdd $end
$var wire 1 1$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 .$ a $end
$var wire 1 2$ gnd $end
$var wire 1 d# out $end
$var wire 1 3$ vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 b# a $end
$var wire 1 4$ gnd $end
$var wire 1 ~# out $end
$var wire 1 5$ vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 e# a $end
$var wire 1 6$ gnd $end
$var wire 1 !$ out $end
$var wire 1 7$ vdd $end
$upscope $end
$upscope $end
$scope module xor_2 $end
$var wire 1 8$ AnB $end
$var wire 1 d# a $end
$var wire 1 f# b $end
$var wire 1 9$ nAB $end
$var wire 1 :$ notA $end
$var wire 1 ;$ notB $end
$var wire 1 i# out $end
$scope module and_1 $end
$var wire 1 :$ a $end
$var wire 1 f# b $end
$var wire 1 9$ out $end
$var wire 1 <$ w $end
$scope module my_nand $end
$var wire 1 :$ a $end
$var wire 1 f# b $end
$var wire 1 =$ gnd $end
$var wire 1 <$ out $end
$var wire 1 >$ vdd $end
$var wire 1 ?$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 <$ a $end
$var wire 1 @$ gnd $end
$var wire 1 9$ out $end
$var wire 1 A$ vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 d# a $end
$var wire 1 ;$ b $end
$var wire 1 8$ out $end
$var wire 1 B$ w $end
$scope module my_nand $end
$var wire 1 d# a $end
$var wire 1 ;$ b $end
$var wire 1 C$ gnd $end
$var wire 1 B$ out $end
$var wire 1 D$ vdd $end
$var wire 1 E$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 B$ a $end
$var wire 1 F$ gnd $end
$var wire 1 8$ out $end
$var wire 1 G$ vdd $end
$upscope $end
$upscope $end
$scope module my_or $end
$var wire 1 9$ a $end
$var wire 1 8$ b $end
$var wire 1 i# out $end
$var wire 1 H$ w $end
$scope module my_nor $end
$var wire 1 9$ a $end
$var wire 1 8$ b $end
$var wire 1 I$ gnd $end
$var wire 1 H$ out $end
$var wire 1 J$ vdd $end
$var wire 1 K$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 H$ a $end
$var wire 1 L$ gnd $end
$var wire 1 i# out $end
$var wire 1 M$ vdd $end
$upscope $end
$upscope $end
$scope module not_1 $end
$var wire 1 d# a $end
$var wire 1 N$ gnd $end
$var wire 1 :$ out $end
$var wire 1 O$ vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 f# a $end
$var wire 1 P$ gnd $end
$var wire 1 ;$ out $end
$var wire 1 Q$ vdd $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and_res $end
$var wire 4 R$ a [3:0] $end
$var wire 4 S$ res [3:0] $end
$var wire 4 T$ b [3:0] $end
$scope module and_0 $end
$var wire 1 U$ a $end
$var wire 1 V$ b $end
$var wire 1 W$ out $end
$var wire 1 X$ w $end
$scope module my_nand $end
$var wire 1 U$ a $end
$var wire 1 V$ b $end
$var wire 1 Y$ gnd $end
$var wire 1 X$ out $end
$var wire 1 Z$ vdd $end
$var wire 1 [$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 X$ a $end
$var wire 1 \$ gnd $end
$var wire 1 W$ out $end
$var wire 1 ]$ vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 ^$ a $end
$var wire 1 _$ b $end
$var wire 1 `$ out $end
$var wire 1 a$ w $end
$scope module my_nand $end
$var wire 1 ^$ a $end
$var wire 1 _$ b $end
$var wire 1 b$ gnd $end
$var wire 1 a$ out $end
$var wire 1 c$ vdd $end
$var wire 1 d$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 a$ a $end
$var wire 1 e$ gnd $end
$var wire 1 `$ out $end
$var wire 1 f$ vdd $end
$upscope $end
$upscope $end
$scope module and_2 $end
$var wire 1 g$ a $end
$var wire 1 h$ b $end
$var wire 1 i$ out $end
$var wire 1 j$ w $end
$scope module my_nand $end
$var wire 1 g$ a $end
$var wire 1 h$ b $end
$var wire 1 k$ gnd $end
$var wire 1 j$ out $end
$var wire 1 l$ vdd $end
$var wire 1 m$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 j$ a $end
$var wire 1 n$ gnd $end
$var wire 1 i$ out $end
$var wire 1 o$ vdd $end
$upscope $end
$upscope $end
$scope module and_3 $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 r$ out $end
$var wire 1 s$ w $end
$scope module my_nand $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 t$ gnd $end
$var wire 1 s$ out $end
$var wire 1 u$ vdd $end
$var wire 1 v$ w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 s$ a $end
$var wire 1 w$ gnd $end
$var wire 1 r$ out $end
$var wire 1 x$ vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module invert_B $end
$var wire 4 y$ a [3:0] $end
$var wire 4 z$ res [3:0] $end
$scope module not_0 $end
$var wire 1 {$ a $end
$var wire 1 |$ gnd $end
$var wire 1 }$ out $end
$var wire 1 ~$ vdd $end
$upscope $end
$scope module not_1 $end
$var wire 1 !% a $end
$var wire 1 "% gnd $end
$var wire 1 #% out $end
$var wire 1 $% vdd $end
$upscope $end
$scope module not_2 $end
$var wire 1 %% a $end
$var wire 1 &% gnd $end
$var wire 1 '% out $end
$var wire 1 (% vdd $end
$upscope $end
$scope module not_3 $end
$var wire 1 )% a $end
$var wire 1 *% gnd $end
$var wire 1 +% out $end
$var wire 1 ,% vdd $end
$upscope $end
$upscope $end
$scope module mux_B $end
$var wire 1 -% control $end
$var wire 4 .% op0 [3:0] $end
$var wire 4 /% op1 [3:0] $end
$var wire 4 0% res [3:0] $end
$var wire 2 1% a3 [1:0] $end
$var wire 2 2% a2 [1:0] $end
$var wire 2 3% a1 [1:0] $end
$var wire 2 4% a0 [1:0] $end
$scope module mux_0th $end
$var wire 2 5% a [1:0] $end
$var wire 1 6% and0 $end
$var wire 1 7% and1 $end
$var wire 1 -% control $end
$var wire 1 8% not_control $end
$var wire 1 9% res $end
$scope module and_0 $end
$var wire 1 :% a $end
$var wire 1 8% b $end
$var wire 1 6% out $end
$var wire 1 ;% w $end
$scope module my_nand $end
$var wire 1 :% a $end
$var wire 1 8% b $end
$var wire 1 <% gnd $end
$var wire 1 ;% out $end
$var wire 1 =% vdd $end
$var wire 1 >% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ;% a $end
$var wire 1 ?% gnd $end
$var wire 1 6% out $end
$var wire 1 @% vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 A% a $end
$var wire 1 -% b $end
$var wire 1 7% out $end
$var wire 1 B% w $end
$scope module my_nand $end
$var wire 1 A% a $end
$var wire 1 -% b $end
$var wire 1 C% gnd $end
$var wire 1 B% out $end
$var wire 1 D% vdd $end
$var wire 1 E% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 B% a $end
$var wire 1 F% gnd $end
$var wire 1 7% out $end
$var wire 1 G% vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 -% a $end
$var wire 1 H% gnd $end
$var wire 1 8% out $end
$var wire 1 I% vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 6% a $end
$var wire 1 7% b $end
$var wire 1 9% out $end
$var wire 1 J% w $end
$scope module my_nor $end
$var wire 1 6% a $end
$var wire 1 7% b $end
$var wire 1 K% gnd $end
$var wire 1 J% out $end
$var wire 1 L% vdd $end
$var wire 1 M% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 J% a $end
$var wire 1 N% gnd $end
$var wire 1 9% out $end
$var wire 1 O% vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_1th $end
$var wire 2 P% a [1:0] $end
$var wire 1 Q% and0 $end
$var wire 1 R% and1 $end
$var wire 1 -% control $end
$var wire 1 S% not_control $end
$var wire 1 T% res $end
$scope module and_0 $end
$var wire 1 U% a $end
$var wire 1 S% b $end
$var wire 1 Q% out $end
$var wire 1 V% w $end
$scope module my_nand $end
$var wire 1 U% a $end
$var wire 1 S% b $end
$var wire 1 W% gnd $end
$var wire 1 V% out $end
$var wire 1 X% vdd $end
$var wire 1 Y% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 V% a $end
$var wire 1 Z% gnd $end
$var wire 1 Q% out $end
$var wire 1 [% vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 \% a $end
$var wire 1 -% b $end
$var wire 1 R% out $end
$var wire 1 ]% w $end
$scope module my_nand $end
$var wire 1 \% a $end
$var wire 1 -% b $end
$var wire 1 ^% gnd $end
$var wire 1 ]% out $end
$var wire 1 _% vdd $end
$var wire 1 `% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ]% a $end
$var wire 1 a% gnd $end
$var wire 1 R% out $end
$var wire 1 b% vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 -% a $end
$var wire 1 c% gnd $end
$var wire 1 S% out $end
$var wire 1 d% vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 Q% a $end
$var wire 1 R% b $end
$var wire 1 T% out $end
$var wire 1 e% w $end
$scope module my_nor $end
$var wire 1 Q% a $end
$var wire 1 R% b $end
$var wire 1 f% gnd $end
$var wire 1 e% out $end
$var wire 1 g% vdd $end
$var wire 1 h% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 e% a $end
$var wire 1 i% gnd $end
$var wire 1 T% out $end
$var wire 1 j% vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_2th $end
$var wire 2 k% a [1:0] $end
$var wire 1 l% and0 $end
$var wire 1 m% and1 $end
$var wire 1 -% control $end
$var wire 1 n% not_control $end
$var wire 1 o% res $end
$scope module and_0 $end
$var wire 1 p% a $end
$var wire 1 n% b $end
$var wire 1 l% out $end
$var wire 1 q% w $end
$scope module my_nand $end
$var wire 1 p% a $end
$var wire 1 n% b $end
$var wire 1 r% gnd $end
$var wire 1 q% out $end
$var wire 1 s% vdd $end
$var wire 1 t% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 q% a $end
$var wire 1 u% gnd $end
$var wire 1 l% out $end
$var wire 1 v% vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 w% a $end
$var wire 1 -% b $end
$var wire 1 m% out $end
$var wire 1 x% w $end
$scope module my_nand $end
$var wire 1 w% a $end
$var wire 1 -% b $end
$var wire 1 y% gnd $end
$var wire 1 x% out $end
$var wire 1 z% vdd $end
$var wire 1 {% w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 x% a $end
$var wire 1 |% gnd $end
$var wire 1 m% out $end
$var wire 1 }% vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 -% a $end
$var wire 1 ~% gnd $end
$var wire 1 n% out $end
$var wire 1 !& vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 l% a $end
$var wire 1 m% b $end
$var wire 1 o% out $end
$var wire 1 "& w $end
$scope module my_nor $end
$var wire 1 l% a $end
$var wire 1 m% b $end
$var wire 1 #& gnd $end
$var wire 1 "& out $end
$var wire 1 $& vdd $end
$var wire 1 %& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 "& a $end
$var wire 1 && gnd $end
$var wire 1 o% out $end
$var wire 1 '& vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_3th $end
$var wire 2 (& a [1:0] $end
$var wire 1 )& and0 $end
$var wire 1 *& and1 $end
$var wire 1 -% control $end
$var wire 1 +& not_control $end
$var wire 1 ,& res $end
$scope module and_0 $end
$var wire 1 -& a $end
$var wire 1 +& b $end
$var wire 1 )& out $end
$var wire 1 .& w $end
$scope module my_nand $end
$var wire 1 -& a $end
$var wire 1 +& b $end
$var wire 1 /& gnd $end
$var wire 1 .& out $end
$var wire 1 0& vdd $end
$var wire 1 1& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 .& a $end
$var wire 1 2& gnd $end
$var wire 1 )& out $end
$var wire 1 3& vdd $end
$upscope $end
$upscope $end
$scope module and_1 $end
$var wire 1 4& a $end
$var wire 1 -% b $end
$var wire 1 *& out $end
$var wire 1 5& w $end
$scope module my_nand $end
$var wire 1 4& a $end
$var wire 1 -% b $end
$var wire 1 6& gnd $end
$var wire 1 5& out $end
$var wire 1 7& vdd $end
$var wire 1 8& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 5& a $end
$var wire 1 9& gnd $end
$var wire 1 *& out $end
$var wire 1 :& vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 -% a $end
$var wire 1 ;& gnd $end
$var wire 1 +& out $end
$var wire 1 <& vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 )& a $end
$var wire 1 *& b $end
$var wire 1 ,& out $end
$var wire 1 =& w $end
$scope module my_nor $end
$var wire 1 )& a $end
$var wire 1 *& b $end
$var wire 1 >& gnd $end
$var wire 1 =& out $end
$var wire 1 ?& vdd $end
$var wire 1 @& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 =& a $end
$var wire 1 A& gnd $end
$var wire 1 ,& out $end
$var wire 1 B& vdd $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module or_res $end
$var wire 4 C& a [3:0] $end
$var wire 4 D& b [3:0] $end
$var wire 4 E& res [3:0] $end
$scope module or_0 $end
$var wire 1 F& a $end
$var wire 1 G& b $end
$var wire 1 H& out $end
$var wire 1 I& w $end
$scope module my_nor $end
$var wire 1 F& a $end
$var wire 1 G& b $end
$var wire 1 J& gnd $end
$var wire 1 I& out $end
$var wire 1 K& vdd $end
$var wire 1 L& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 I& a $end
$var wire 1 M& gnd $end
$var wire 1 H& out $end
$var wire 1 N& vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 O& a $end
$var wire 1 P& b $end
$var wire 1 Q& out $end
$var wire 1 R& w $end
$scope module my_nor $end
$var wire 1 O& a $end
$var wire 1 P& b $end
$var wire 1 S& gnd $end
$var wire 1 R& out $end
$var wire 1 T& vdd $end
$var wire 1 U& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 R& a $end
$var wire 1 V& gnd $end
$var wire 1 Q& out $end
$var wire 1 W& vdd $end
$upscope $end
$upscope $end
$scope module or_2 $end
$var wire 1 X& a $end
$var wire 1 Y& b $end
$var wire 1 Z& out $end
$var wire 1 [& w $end
$scope module my_nor $end
$var wire 1 X& a $end
$var wire 1 Y& b $end
$var wire 1 \& gnd $end
$var wire 1 [& out $end
$var wire 1 ]& vdd $end
$var wire 1 ^& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 [& a $end
$var wire 1 _& gnd $end
$var wire 1 Z& out $end
$var wire 1 `& vdd $end
$upscope $end
$upscope $end
$scope module or_3 $end
$var wire 1 a& a $end
$var wire 1 b& b $end
$var wire 1 c& out $end
$var wire 1 d& w $end
$scope module my_nor $end
$var wire 1 a& a $end
$var wire 1 b& b $end
$var wire 1 e& gnd $end
$var wire 1 d& out $end
$var wire 1 f& vdd $end
$var wire 1 g& w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 d& a $end
$var wire 1 h& gnd $end
$var wire 1 c& out $end
$var wire 1 i& vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module res_mux $end
$var wire 2 j& control [1:0] $end
$var wire 4 k& op0 [3:0] $end
$var wire 4 l& op1 [3:0] $end
$var wire 4 m& op2 [3:0] $end
$var wire 4 n& res [3:0] $end
$var wire 4 o& op3 [3:0] $end
$var wire 4 p& a3 [3:0] $end
$var wire 4 q& a2 [3:0] $end
$var wire 4 r& a1 [3:0] $end
$var wire 4 s& a0 [3:0] $end
$scope module mux_0th $end
$var wire 4 t& a [3:0] $end
$var wire 1 u& and0 $end
$var wire 1 v& and1 $end
$var wire 1 w& and2 $end
$var wire 1 x& and3 $end
$var wire 2 y& control [1:0] $end
$var wire 1 z& d0 $end
$var wire 1 {& d1 $end
$var wire 1 |& d2 $end
$var wire 1 }& d3 $end
$var wire 1 ~& not_c0 $end
$var wire 1 !' not_c1 $end
$var wire 1 "' res $end
$var wire 1 #' tOr1 $end
$var wire 1 $' tOr2 $end
$scope module and_0_0 $end
$var wire 1 ~& a $end
$var wire 1 !' b $end
$var wire 1 z& out $end
$var wire 1 %' w $end
$scope module my_nand $end
$var wire 1 ~& a $end
$var wire 1 !' b $end
$var wire 1 &' gnd $end
$var wire 1 %' out $end
$var wire 1 '' vdd $end
$var wire 1 (' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 %' a $end
$var wire 1 )' gnd $end
$var wire 1 z& out $end
$var wire 1 *' vdd $end
$upscope $end
$upscope $end
$scope module and_0_1 $end
$var wire 1 z& a $end
$var wire 1 +' b $end
$var wire 1 u& out $end
$var wire 1 ,' w $end
$scope module my_nand $end
$var wire 1 z& a $end
$var wire 1 +' b $end
$var wire 1 -' gnd $end
$var wire 1 ,' out $end
$var wire 1 .' vdd $end
$var wire 1 /' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ,' a $end
$var wire 1 0' gnd $end
$var wire 1 u& out $end
$var wire 1 1' vdd $end
$upscope $end
$upscope $end
$scope module and_1_0 $end
$var wire 1 2' a $end
$var wire 1 !' b $end
$var wire 1 {& out $end
$var wire 1 3' w $end
$scope module my_nand $end
$var wire 1 2' a $end
$var wire 1 !' b $end
$var wire 1 4' gnd $end
$var wire 1 3' out $end
$var wire 1 5' vdd $end
$var wire 1 6' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 3' a $end
$var wire 1 7' gnd $end
$var wire 1 {& out $end
$var wire 1 8' vdd $end
$upscope $end
$upscope $end
$scope module and_1_1 $end
$var wire 1 {& a $end
$var wire 1 9' b $end
$var wire 1 v& out $end
$var wire 1 :' w $end
$scope module my_nand $end
$var wire 1 {& a $end
$var wire 1 9' b $end
$var wire 1 ;' gnd $end
$var wire 1 :' out $end
$var wire 1 <' vdd $end
$var wire 1 =' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 :' a $end
$var wire 1 >' gnd $end
$var wire 1 v& out $end
$var wire 1 ?' vdd $end
$upscope $end
$upscope $end
$scope module and_2_0 $end
$var wire 1 ~& a $end
$var wire 1 @' b $end
$var wire 1 |& out $end
$var wire 1 A' w $end
$scope module my_nand $end
$var wire 1 ~& a $end
$var wire 1 @' b $end
$var wire 1 B' gnd $end
$var wire 1 A' out $end
$var wire 1 C' vdd $end
$var wire 1 D' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 A' a $end
$var wire 1 E' gnd $end
$var wire 1 |& out $end
$var wire 1 F' vdd $end
$upscope $end
$upscope $end
$scope module and_2_1 $end
$var wire 1 |& a $end
$var wire 1 G' b $end
$var wire 1 w& out $end
$var wire 1 H' w $end
$scope module my_nand $end
$var wire 1 |& a $end
$var wire 1 G' b $end
$var wire 1 I' gnd $end
$var wire 1 H' out $end
$var wire 1 J' vdd $end
$var wire 1 K' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 H' a $end
$var wire 1 L' gnd $end
$var wire 1 w& out $end
$var wire 1 M' vdd $end
$upscope $end
$upscope $end
$scope module and_3_0 $end
$var wire 1 N' a $end
$var wire 1 O' b $end
$var wire 1 }& out $end
$var wire 1 P' w $end
$scope module my_nand $end
$var wire 1 N' a $end
$var wire 1 O' b $end
$var wire 1 Q' gnd $end
$var wire 1 P' out $end
$var wire 1 R' vdd $end
$var wire 1 S' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 P' a $end
$var wire 1 T' gnd $end
$var wire 1 }& out $end
$var wire 1 U' vdd $end
$upscope $end
$upscope $end
$scope module and_3_1 $end
$var wire 1 }& a $end
$var wire 1 V' b $end
$var wire 1 x& out $end
$var wire 1 W' w $end
$scope module my_nand $end
$var wire 1 }& a $end
$var wire 1 V' b $end
$var wire 1 X' gnd $end
$var wire 1 W' out $end
$var wire 1 Y' vdd $end
$var wire 1 Z' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 W' a $end
$var wire 1 [' gnd $end
$var wire 1 x& out $end
$var wire 1 \' vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 ]' a $end
$var wire 1 ^' gnd $end
$var wire 1 ~& out $end
$var wire 1 _' vdd $end
$upscope $end
$scope module not_1 $end
$var wire 1 `' a $end
$var wire 1 a' gnd $end
$var wire 1 !' out $end
$var wire 1 b' vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 u& a $end
$var wire 1 v& b $end
$var wire 1 #' out $end
$var wire 1 c' w $end
$scope module my_nor $end
$var wire 1 u& a $end
$var wire 1 v& b $end
$var wire 1 d' gnd $end
$var wire 1 c' out $end
$var wire 1 e' vdd $end
$var wire 1 f' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 c' a $end
$var wire 1 g' gnd $end
$var wire 1 #' out $end
$var wire 1 h' vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 w& a $end
$var wire 1 x& b $end
$var wire 1 $' out $end
$var wire 1 i' w $end
$scope module my_nor $end
$var wire 1 w& a $end
$var wire 1 x& b $end
$var wire 1 j' gnd $end
$var wire 1 i' out $end
$var wire 1 k' vdd $end
$var wire 1 l' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 i' a $end
$var wire 1 m' gnd $end
$var wire 1 $' out $end
$var wire 1 n' vdd $end
$upscope $end
$upscope $end
$scope module or_2 $end
$var wire 1 #' a $end
$var wire 1 $' b $end
$var wire 1 "' out $end
$var wire 1 o' w $end
$scope module my_nor $end
$var wire 1 #' a $end
$var wire 1 $' b $end
$var wire 1 p' gnd $end
$var wire 1 o' out $end
$var wire 1 q' vdd $end
$var wire 1 r' w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 o' a $end
$var wire 1 s' gnd $end
$var wire 1 "' out $end
$var wire 1 t' vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_1th $end
$var wire 4 u' a [3:0] $end
$var wire 1 v' and0 $end
$var wire 1 w' and1 $end
$var wire 1 x' and2 $end
$var wire 1 y' and3 $end
$var wire 2 z' control [1:0] $end
$var wire 1 {' d0 $end
$var wire 1 |' d1 $end
$var wire 1 }' d2 $end
$var wire 1 ~' d3 $end
$var wire 1 !( not_c0 $end
$var wire 1 "( not_c1 $end
$var wire 1 #( res $end
$var wire 1 $( tOr1 $end
$var wire 1 %( tOr2 $end
$scope module and_0_0 $end
$var wire 1 !( a $end
$var wire 1 "( b $end
$var wire 1 {' out $end
$var wire 1 &( w $end
$scope module my_nand $end
$var wire 1 !( a $end
$var wire 1 "( b $end
$var wire 1 '( gnd $end
$var wire 1 &( out $end
$var wire 1 (( vdd $end
$var wire 1 )( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 &( a $end
$var wire 1 *( gnd $end
$var wire 1 {' out $end
$var wire 1 +( vdd $end
$upscope $end
$upscope $end
$scope module and_0_1 $end
$var wire 1 {' a $end
$var wire 1 ,( b $end
$var wire 1 v' out $end
$var wire 1 -( w $end
$scope module my_nand $end
$var wire 1 {' a $end
$var wire 1 ,( b $end
$var wire 1 .( gnd $end
$var wire 1 -( out $end
$var wire 1 /( vdd $end
$var wire 1 0( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 -( a $end
$var wire 1 1( gnd $end
$var wire 1 v' out $end
$var wire 1 2( vdd $end
$upscope $end
$upscope $end
$scope module and_1_0 $end
$var wire 1 3( a $end
$var wire 1 "( b $end
$var wire 1 |' out $end
$var wire 1 4( w $end
$scope module my_nand $end
$var wire 1 3( a $end
$var wire 1 "( b $end
$var wire 1 5( gnd $end
$var wire 1 4( out $end
$var wire 1 6( vdd $end
$var wire 1 7( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 4( a $end
$var wire 1 8( gnd $end
$var wire 1 |' out $end
$var wire 1 9( vdd $end
$upscope $end
$upscope $end
$scope module and_1_1 $end
$var wire 1 |' a $end
$var wire 1 :( b $end
$var wire 1 w' out $end
$var wire 1 ;( w $end
$scope module my_nand $end
$var wire 1 |' a $end
$var wire 1 :( b $end
$var wire 1 <( gnd $end
$var wire 1 ;( out $end
$var wire 1 =( vdd $end
$var wire 1 >( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ;( a $end
$var wire 1 ?( gnd $end
$var wire 1 w' out $end
$var wire 1 @( vdd $end
$upscope $end
$upscope $end
$scope module and_2_0 $end
$var wire 1 !( a $end
$var wire 1 A( b $end
$var wire 1 }' out $end
$var wire 1 B( w $end
$scope module my_nand $end
$var wire 1 !( a $end
$var wire 1 A( b $end
$var wire 1 C( gnd $end
$var wire 1 B( out $end
$var wire 1 D( vdd $end
$var wire 1 E( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 B( a $end
$var wire 1 F( gnd $end
$var wire 1 }' out $end
$var wire 1 G( vdd $end
$upscope $end
$upscope $end
$scope module and_2_1 $end
$var wire 1 }' a $end
$var wire 1 H( b $end
$var wire 1 x' out $end
$var wire 1 I( w $end
$scope module my_nand $end
$var wire 1 }' a $end
$var wire 1 H( b $end
$var wire 1 J( gnd $end
$var wire 1 I( out $end
$var wire 1 K( vdd $end
$var wire 1 L( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 I( a $end
$var wire 1 M( gnd $end
$var wire 1 x' out $end
$var wire 1 N( vdd $end
$upscope $end
$upscope $end
$scope module and_3_0 $end
$var wire 1 O( a $end
$var wire 1 P( b $end
$var wire 1 ~' out $end
$var wire 1 Q( w $end
$scope module my_nand $end
$var wire 1 O( a $end
$var wire 1 P( b $end
$var wire 1 R( gnd $end
$var wire 1 Q( out $end
$var wire 1 S( vdd $end
$var wire 1 T( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 Q( a $end
$var wire 1 U( gnd $end
$var wire 1 ~' out $end
$var wire 1 V( vdd $end
$upscope $end
$upscope $end
$scope module and_3_1 $end
$var wire 1 ~' a $end
$var wire 1 W( b $end
$var wire 1 y' out $end
$var wire 1 X( w $end
$scope module my_nand $end
$var wire 1 ~' a $end
$var wire 1 W( b $end
$var wire 1 Y( gnd $end
$var wire 1 X( out $end
$var wire 1 Z( vdd $end
$var wire 1 [( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 X( a $end
$var wire 1 \( gnd $end
$var wire 1 y' out $end
$var wire 1 ]( vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 ^( a $end
$var wire 1 _( gnd $end
$var wire 1 !( out $end
$var wire 1 `( vdd $end
$upscope $end
$scope module not_1 $end
$var wire 1 a( a $end
$var wire 1 b( gnd $end
$var wire 1 "( out $end
$var wire 1 c( vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 v' a $end
$var wire 1 w' b $end
$var wire 1 $( out $end
$var wire 1 d( w $end
$scope module my_nor $end
$var wire 1 v' a $end
$var wire 1 w' b $end
$var wire 1 e( gnd $end
$var wire 1 d( out $end
$var wire 1 f( vdd $end
$var wire 1 g( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 d( a $end
$var wire 1 h( gnd $end
$var wire 1 $( out $end
$var wire 1 i( vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 x' a $end
$var wire 1 y' b $end
$var wire 1 %( out $end
$var wire 1 j( w $end
$scope module my_nor $end
$var wire 1 x' a $end
$var wire 1 y' b $end
$var wire 1 k( gnd $end
$var wire 1 j( out $end
$var wire 1 l( vdd $end
$var wire 1 m( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 j( a $end
$var wire 1 n( gnd $end
$var wire 1 %( out $end
$var wire 1 o( vdd $end
$upscope $end
$upscope $end
$scope module or_2 $end
$var wire 1 $( a $end
$var wire 1 %( b $end
$var wire 1 #( out $end
$var wire 1 p( w $end
$scope module my_nor $end
$var wire 1 $( a $end
$var wire 1 %( b $end
$var wire 1 q( gnd $end
$var wire 1 p( out $end
$var wire 1 r( vdd $end
$var wire 1 s( w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 p( a $end
$var wire 1 t( gnd $end
$var wire 1 #( out $end
$var wire 1 u( vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_2th $end
$var wire 4 v( a [3:0] $end
$var wire 1 w( and0 $end
$var wire 1 x( and1 $end
$var wire 1 y( and2 $end
$var wire 1 z( and3 $end
$var wire 2 {( control [1:0] $end
$var wire 1 |( d0 $end
$var wire 1 }( d1 $end
$var wire 1 ~( d2 $end
$var wire 1 !) d3 $end
$var wire 1 ") not_c0 $end
$var wire 1 #) not_c1 $end
$var wire 1 $) res $end
$var wire 1 %) tOr1 $end
$var wire 1 &) tOr2 $end
$scope module and_0_0 $end
$var wire 1 ") a $end
$var wire 1 #) b $end
$var wire 1 |( out $end
$var wire 1 ') w $end
$scope module my_nand $end
$var wire 1 ") a $end
$var wire 1 #) b $end
$var wire 1 () gnd $end
$var wire 1 ') out $end
$var wire 1 )) vdd $end
$var wire 1 *) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 ') a $end
$var wire 1 +) gnd $end
$var wire 1 |( out $end
$var wire 1 ,) vdd $end
$upscope $end
$upscope $end
$scope module and_0_1 $end
$var wire 1 |( a $end
$var wire 1 -) b $end
$var wire 1 w( out $end
$var wire 1 .) w $end
$scope module my_nand $end
$var wire 1 |( a $end
$var wire 1 -) b $end
$var wire 1 /) gnd $end
$var wire 1 .) out $end
$var wire 1 0) vdd $end
$var wire 1 1) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 .) a $end
$var wire 1 2) gnd $end
$var wire 1 w( out $end
$var wire 1 3) vdd $end
$upscope $end
$upscope $end
$scope module and_1_0 $end
$var wire 1 4) a $end
$var wire 1 #) b $end
$var wire 1 }( out $end
$var wire 1 5) w $end
$scope module my_nand $end
$var wire 1 4) a $end
$var wire 1 #) b $end
$var wire 1 6) gnd $end
$var wire 1 5) out $end
$var wire 1 7) vdd $end
$var wire 1 8) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 5) a $end
$var wire 1 9) gnd $end
$var wire 1 }( out $end
$var wire 1 :) vdd $end
$upscope $end
$upscope $end
$scope module and_1_1 $end
$var wire 1 }( a $end
$var wire 1 ;) b $end
$var wire 1 x( out $end
$var wire 1 <) w $end
$scope module my_nand $end
$var wire 1 }( a $end
$var wire 1 ;) b $end
$var wire 1 =) gnd $end
$var wire 1 <) out $end
$var wire 1 >) vdd $end
$var wire 1 ?) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 <) a $end
$var wire 1 @) gnd $end
$var wire 1 x( out $end
$var wire 1 A) vdd $end
$upscope $end
$upscope $end
$scope module and_2_0 $end
$var wire 1 ") a $end
$var wire 1 B) b $end
$var wire 1 ~( out $end
$var wire 1 C) w $end
$scope module my_nand $end
$var wire 1 ") a $end
$var wire 1 B) b $end
$var wire 1 D) gnd $end
$var wire 1 C) out $end
$var wire 1 E) vdd $end
$var wire 1 F) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 C) a $end
$var wire 1 G) gnd $end
$var wire 1 ~( out $end
$var wire 1 H) vdd $end
$upscope $end
$upscope $end
$scope module and_2_1 $end
$var wire 1 ~( a $end
$var wire 1 I) b $end
$var wire 1 y( out $end
$var wire 1 J) w $end
$scope module my_nand $end
$var wire 1 ~( a $end
$var wire 1 I) b $end
$var wire 1 K) gnd $end
$var wire 1 J) out $end
$var wire 1 L) vdd $end
$var wire 1 M) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 J) a $end
$var wire 1 N) gnd $end
$var wire 1 y( out $end
$var wire 1 O) vdd $end
$upscope $end
$upscope $end
$scope module and_3_0 $end
$var wire 1 P) a $end
$var wire 1 Q) b $end
$var wire 1 !) out $end
$var wire 1 R) w $end
$scope module my_nand $end
$var wire 1 P) a $end
$var wire 1 Q) b $end
$var wire 1 S) gnd $end
$var wire 1 R) out $end
$var wire 1 T) vdd $end
$var wire 1 U) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 R) a $end
$var wire 1 V) gnd $end
$var wire 1 !) out $end
$var wire 1 W) vdd $end
$upscope $end
$upscope $end
$scope module and_3_1 $end
$var wire 1 !) a $end
$var wire 1 X) b $end
$var wire 1 z( out $end
$var wire 1 Y) w $end
$scope module my_nand $end
$var wire 1 !) a $end
$var wire 1 X) b $end
$var wire 1 Z) gnd $end
$var wire 1 Y) out $end
$var wire 1 [) vdd $end
$var wire 1 \) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 Y) a $end
$var wire 1 ]) gnd $end
$var wire 1 z( out $end
$var wire 1 ^) vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 _) a $end
$var wire 1 `) gnd $end
$var wire 1 ") out $end
$var wire 1 a) vdd $end
$upscope $end
$scope module not_1 $end
$var wire 1 b) a $end
$var wire 1 c) gnd $end
$var wire 1 #) out $end
$var wire 1 d) vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 w( a $end
$var wire 1 x( b $end
$var wire 1 %) out $end
$var wire 1 e) w $end
$scope module my_nor $end
$var wire 1 w( a $end
$var wire 1 x( b $end
$var wire 1 f) gnd $end
$var wire 1 e) out $end
$var wire 1 g) vdd $end
$var wire 1 h) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 e) a $end
$var wire 1 i) gnd $end
$var wire 1 %) out $end
$var wire 1 j) vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 y( a $end
$var wire 1 z( b $end
$var wire 1 &) out $end
$var wire 1 k) w $end
$scope module my_nor $end
$var wire 1 y( a $end
$var wire 1 z( b $end
$var wire 1 l) gnd $end
$var wire 1 k) out $end
$var wire 1 m) vdd $end
$var wire 1 n) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 k) a $end
$var wire 1 o) gnd $end
$var wire 1 &) out $end
$var wire 1 p) vdd $end
$upscope $end
$upscope $end
$scope module or_2 $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 $) out $end
$var wire 1 q) w $end
$scope module my_nor $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 r) gnd $end
$var wire 1 q) out $end
$var wire 1 s) vdd $end
$var wire 1 t) w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 q) a $end
$var wire 1 u) gnd $end
$var wire 1 $) out $end
$var wire 1 v) vdd $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_3th $end
$var wire 4 w) a [3:0] $end
$var wire 1 x) and0 $end
$var wire 1 y) and1 $end
$var wire 1 z) and2 $end
$var wire 1 {) and3 $end
$var wire 2 |) control [1:0] $end
$var wire 1 }) d0 $end
$var wire 1 ~) d1 $end
$var wire 1 !* d2 $end
$var wire 1 "* d3 $end
$var wire 1 #* not_c0 $end
$var wire 1 $* not_c1 $end
$var wire 1 %* res $end
$var wire 1 &* tOr1 $end
$var wire 1 '* tOr2 $end
$scope module and_0_0 $end
$var wire 1 #* a $end
$var wire 1 $* b $end
$var wire 1 }) out $end
$var wire 1 (* w $end
$scope module my_nand $end
$var wire 1 #* a $end
$var wire 1 $* b $end
$var wire 1 )* gnd $end
$var wire 1 (* out $end
$var wire 1 ** vdd $end
$var wire 1 +* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 (* a $end
$var wire 1 ,* gnd $end
$var wire 1 }) out $end
$var wire 1 -* vdd $end
$upscope $end
$upscope $end
$scope module and_0_1 $end
$var wire 1 }) a $end
$var wire 1 .* b $end
$var wire 1 x) out $end
$var wire 1 /* w $end
$scope module my_nand $end
$var wire 1 }) a $end
$var wire 1 .* b $end
$var wire 1 0* gnd $end
$var wire 1 /* out $end
$var wire 1 1* vdd $end
$var wire 1 2* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 /* a $end
$var wire 1 3* gnd $end
$var wire 1 x) out $end
$var wire 1 4* vdd $end
$upscope $end
$upscope $end
$scope module and_1_0 $end
$var wire 1 5* a $end
$var wire 1 $* b $end
$var wire 1 ~) out $end
$var wire 1 6* w $end
$scope module my_nand $end
$var wire 1 5* a $end
$var wire 1 $* b $end
$var wire 1 7* gnd $end
$var wire 1 6* out $end
$var wire 1 8* vdd $end
$var wire 1 9* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 6* a $end
$var wire 1 :* gnd $end
$var wire 1 ~) out $end
$var wire 1 ;* vdd $end
$upscope $end
$upscope $end
$scope module and_1_1 $end
$var wire 1 ~) a $end
$var wire 1 <* b $end
$var wire 1 y) out $end
$var wire 1 =* w $end
$scope module my_nand $end
$var wire 1 ~) a $end
$var wire 1 <* b $end
$var wire 1 >* gnd $end
$var wire 1 =* out $end
$var wire 1 ?* vdd $end
$var wire 1 @* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 =* a $end
$var wire 1 A* gnd $end
$var wire 1 y) out $end
$var wire 1 B* vdd $end
$upscope $end
$upscope $end
$scope module and_2_0 $end
$var wire 1 #* a $end
$var wire 1 C* b $end
$var wire 1 !* out $end
$var wire 1 D* w $end
$scope module my_nand $end
$var wire 1 #* a $end
$var wire 1 C* b $end
$var wire 1 E* gnd $end
$var wire 1 D* out $end
$var wire 1 F* vdd $end
$var wire 1 G* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 D* a $end
$var wire 1 H* gnd $end
$var wire 1 !* out $end
$var wire 1 I* vdd $end
$upscope $end
$upscope $end
$scope module and_2_1 $end
$var wire 1 !* a $end
$var wire 1 J* b $end
$var wire 1 z) out $end
$var wire 1 K* w $end
$scope module my_nand $end
$var wire 1 !* a $end
$var wire 1 J* b $end
$var wire 1 L* gnd $end
$var wire 1 K* out $end
$var wire 1 M* vdd $end
$var wire 1 N* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 K* a $end
$var wire 1 O* gnd $end
$var wire 1 z) out $end
$var wire 1 P* vdd $end
$upscope $end
$upscope $end
$scope module and_3_0 $end
$var wire 1 Q* a $end
$var wire 1 R* b $end
$var wire 1 "* out $end
$var wire 1 S* w $end
$scope module my_nand $end
$var wire 1 Q* a $end
$var wire 1 R* b $end
$var wire 1 T* gnd $end
$var wire 1 S* out $end
$var wire 1 U* vdd $end
$var wire 1 V* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 S* a $end
$var wire 1 W* gnd $end
$var wire 1 "* out $end
$var wire 1 X* vdd $end
$upscope $end
$upscope $end
$scope module and_3_1 $end
$var wire 1 "* a $end
$var wire 1 Y* b $end
$var wire 1 {) out $end
$var wire 1 Z* w $end
$scope module my_nand $end
$var wire 1 "* a $end
$var wire 1 Y* b $end
$var wire 1 [* gnd $end
$var wire 1 Z* out $end
$var wire 1 \* vdd $end
$var wire 1 ]* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 Z* a $end
$var wire 1 ^* gnd $end
$var wire 1 {) out $end
$var wire 1 _* vdd $end
$upscope $end
$upscope $end
$scope module not_0 $end
$var wire 1 `* a $end
$var wire 1 a* gnd $end
$var wire 1 #* out $end
$var wire 1 b* vdd $end
$upscope $end
$scope module not_1 $end
$var wire 1 c* a $end
$var wire 1 d* gnd $end
$var wire 1 $* out $end
$var wire 1 e* vdd $end
$upscope $end
$scope module or_0 $end
$var wire 1 x) a $end
$var wire 1 y) b $end
$var wire 1 &* out $end
$var wire 1 f* w $end
$scope module my_nor $end
$var wire 1 x) a $end
$var wire 1 y) b $end
$var wire 1 g* gnd $end
$var wire 1 f* out $end
$var wire 1 h* vdd $end
$var wire 1 i* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 f* a $end
$var wire 1 j* gnd $end
$var wire 1 &* out $end
$var wire 1 k* vdd $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var wire 1 z) a $end
$var wire 1 {) b $end
$var wire 1 '* out $end
$var wire 1 l* w $end
$scope module my_nor $end
$var wire 1 z) a $end
$var wire 1 {) b $end
$var wire 1 m* gnd $end
$var wire 1 l* out $end
$var wire 1 n* vdd $end
$var wire 1 o* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 l* a $end
$var wire 1 p* gnd $end
$var wire 1 '* out $end
$var wire 1 q* vdd $end
$upscope $end
$upscope $end
$scope module or_2 $end
$var wire 1 &* a $end
$var wire 1 '* b $end
$var wire 1 %* out $end
$var wire 1 r* w $end
$scope module my_nor $end
$var wire 1 &* a $end
$var wire 1 '* b $end
$var wire 1 s* gnd $end
$var wire 1 r* out $end
$var wire 1 t* vdd $end
$var wire 1 u* w1 $end
$upscope $end
$scope module my_not $end
$var wire 1 r* a $end
$var wire 1 v* gnd $end
$var wire 1 %* out $end
$var wire 1 w* vdd $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module zeroEx_res $end
$var wire 4 x* a [3:0] $end
$var wire 4 y* res [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 y*
b100 x*
1w*
0v*
zu*
1t*
0s*
0r*
1q*
0p*
1o*
1n*
0m*
1l*
1k*
0j*
zi*
1h*
0g*
0f*
1e*
0d*
0c*
1b*
0a*
0`*
1_*
0^*
z]*
1\*
0[*
1Z*
0Y*
1X*
0W*
zV*
1U*
0T*
1S*
0R*
0Q*
1P*
0O*
zN*
1M*
0L*
1K*
0J*
1I*
0H*
0G*
1F*
0E*
1D*
0C*
1B*
0A*
z@*
1?*
0>*
1=*
1<*
1;*
0:*
z9*
18*
07*
16*
05*
14*
03*
02*
11*
00*
0/*
1.*
1-*
0,*
0+*
1**
0)*
0(*
0'*
1&*
1%*
1$*
1#*
0"*
0!*
0~)
1})
b0 |)
0{)
0z)
0y)
1x)
b11 w)
1v)
0u)
1t)
1s)
0r)
1q)
1p)
0o)
1n)
1m)
0l)
1k)
1j)
0i)
1h)
1g)
0f)
1e)
1d)
0c)
0b)
1a)
0`)
0_)
1^)
0])
z\)
1[)
0Z)
1Y)
0X)
1W)
0V)
zU)
1T)
0S)
1R)
0Q)
0P)
1O)
0N)
zM)
1L)
0K)
1J)
1I)
1H)
0G)
0F)
1E)
0D)
1C)
0B)
1A)
0@)
z?)
1>)
0=)
1<)
0;)
1:)
09)
z8)
17)
06)
15)
04)
13)
02)
01)
10)
0/)
1.)
0-)
1,)
0+)
0*)
1))
0()
0')
0&)
0%)
0$)
1#)
1")
0!)
0~(
0}(
1|(
b0 {(
0z(
0y(
0x(
0w(
b100 v(
1u(
0t(
1s(
1r(
0q(
1p(
1o(
0n(
1m(
1l(
0k(
1j(
1i(
0h(
1g(
1f(
0e(
1d(
1c(
0b(
0a(
1`(
0_(
0^(
1](
0\(
z[(
1Z(
0Y(
1X(
0W(
1V(
0U(
zT(
1S(
0R(
1Q(
0P(
0O(
1N(
0M(
zL(
1K(
0J(
1I(
0H(
1G(
0F(
0E(
1D(
0C(
1B(
0A(
1@(
0?(
z>(
1=(
0<(
1;(
1:(
19(
08(
z7(
16(
05(
14(
03(
12(
01(
00(
1/(
0.(
1-(
0,(
1+(
0*(
0)(
1((
0'(
0&(
0%(
0$(
0#(
1"(
1!(
0~'
0}'
0|'
1{'
b0 z'
0y'
0x'
0w'
0v'
b10 u'
1t'
0s'
zr'
1q'
0p'
0o'
1n'
0m'
1l'
1k'
0j'
1i'
1h'
0g'
zf'
1e'
0d'
0c'
1b'
0a'
0`'
1_'
0^'
0]'
1\'
0['
zZ'
1Y'
0X'
1W'
0V'
1U'
0T'
zS'
1R'
0Q'
1P'
0O'
0N'
1M'
0L'
zK'
1J'
0I'
1H'
0G'
1F'
0E'
0D'
1C'
0B'
1A'
0@'
1?'
0>'
z='
1<'
0;'
1:'
19'
18'
07'
z6'
15'
04'
13'
02'
11'
00'
0/'
1.'
0-'
0,'
1+'
1*'
0)'
0('
1''
0&'
0%'
0$'
1#'
1"'
1!'
1~&
0}&
0|&
0{&
1z&
b0 y&
0x&
0w&
0v&
1u&
b11 t&
b11 s&
b10 r&
b100 q&
b11 p&
b0 o&
b1001 n&
b100 m&
b1011 l&
b1001 k&
b0 j&
1i&
0h&
zg&
1f&
0e&
0d&
1c&
1b&
1a&
1`&
0_&
1^&
1]&
0\&
1[&
0Z&
0Y&
0X&
1W&
0V&
1U&
1T&
0S&
0R&
1Q&
1P&
0O&
1N&
0M&
zL&
1K&
0J&
0I&
1H&
1G&
1F&
b1011 E&
b1011 D&
b1001 C&
1B&
0A&
z@&
1?&
0>&
0=&
1<&
0;&
1:&
09&
z8&
17&
06&
15&
04&
13&
02&
01&
10&
0/&
0.&
1-&
1,&
1+&
0*&
1)&
b1 (&
1'&
0&&
1%&
1$&
0#&
1"&
1!&
0~%
1}%
0|%
0{%
1z%
0y%
1x%
1w%
1v%
0u%
zt%
1s%
0r%
1q%
0p%
0o%
1n%
0m%
0l%
b10 k%
1j%
0i%
zh%
1g%
0f%
0e%
1d%
0c%
1b%
0a%
z`%
1_%
0^%
1]%
0\%
1[%
0Z%
0Y%
1X%
0W%
0V%
1U%
1T%
1S%
0R%
1Q%
b1 P%
1O%
0N%
zM%
1L%
0K%
0J%
1I%
0H%
1G%
0F%
zE%
1D%
0C%
1B%
0A%
1@%
0?%
0>%
1=%
0<%
0;%
1:%
19%
18%
07%
16%
b1 5%
b1 4%
b1 3%
b10 2%
b1 1%
b1011 0%
b100 /%
b1011 .%
0-%
1,%
0+%
0*%
1)%
1(%
1'%
0&%
0%%
1$%
0#%
0"%
1!%
1~$
0}$
0|$
1{$
b100 z$
b1011 y$
1x$
0w$
0v$
1u$
0t$
0s$
1r$
1q$
1p$
1o$
0n$
zm$
1l$
0k$
1j$
0i$
0h$
0g$
1f$
0e$
zd$
1c$
0b$
1a$
0`$
1_$
0^$
1]$
0\$
0[$
1Z$
0Y$
0X$
1W$
1V$
1U$
b1011 T$
b1001 S$
b1001 R$
1Q$
0P$
1O$
0N$
1M$
0L$
1K$
1J$
0I$
1H$
1G$
0F$
zE$
1D$
0C$
1B$
1A$
0@$
0?$
1>$
0=$
1<$
1;$
1:$
09$
08$
17$
06$
15$
04$
13$
02$
11$
10$
0/$
1.$
1-$
0,$
0+$
1*$
0)$
1($
1'$
0&$
z%$
1$$
0#$
1"$
0!$
0~#
0}#
0|#
1{#
0z#
zy#
1x#
0w#
0v#
1u#
0t#
zs#
1r#
0q#
1p#
1o#
0n#
0m#
1l#
0k#
0j#
0i#
1h#
0g#
0f#
1e#
0d#
1c#
1b#
1a#
0`#
1_#
0^#
1]#
0\#
z[#
1Z#
0Y#
0X#
1W#
0V#
zU#
1T#
0S#
1R#
1Q#
0P#
0O#
1N#
0M#
0L#
0K#
1J#
1I#
0H#
1G#
0F#
1E#
0D#
1C#
0B#
1A#
1@#
0?#
1>#
1=#
0<#
z;#
1:#
09#
18#
17#
06#
05#
14#
03#
12#
11#
10#
0/#
0.#
1-#
0,#
1+#
1*#
0)#
1(#
1'#
0&#
z%#
1$#
0##
1"#
1!#
0~"
z}"
1|"
0{"
1z"
1y"
0x"
0w"
1v"
0u"
0t"
0s"
0r"
1q"
0p"
1o"
0n"
1m"
0l"
1k"
1j"
0i"
1h"
1g"
0f"
0e"
1d"
0c"
1b"
1a"
0`"
z_"
1^"
0]"
1\"
0["
0Z"
0Y"
0X"
1W"
0V"
1U"
0T"
1S"
0R"
zQ"
1P"
0O"
0N"
1M"
0L"
zK"
1J"
0I"
1H"
1G"
0F"
0E"
1D"
0C"
0B"
0A"
1@"
1?"
0>"
1="
0<"
1;"
1:"
09"
08"
17"
06"
05"
14"
03"
02"
11"
00"
z/"
1."
0-"
1,"
0+"
1*"
1)"
1("
1'"
1&"
0%"
0$"
1#"
0""
1!"
0~
1}
0|
1{
1z
0y
1x
1w
0v
zu
1t
0s
1r
1q
0p
0o
1n
0m
1l
1k
1j
0i
0h
1g
0f
1e
0d
1c
0b
1a
1`
0_
1^
1]
0\
0[
1Z
0Y
1X
1W
0V
zU
1T
0S
1R
0Q
0P
0O
0N
1M
0L
zK
1J
0I
0H
1G
0F
zE
1D
0C
1B
1A
0@
0?
1>
0=
0<
0;
1:
09
18
07
16
15
b1011 4
b1011 3
b100 2
01
b1001 0
b100 /
b1001 .
b100 -
b1011 ,
b1011 +
b1001 *
b0 )
b0 (
b1011 '
b1001 &
b0 %
b0 $
b1011 #
b1001 "
b1001 !
$end
#1
1f'
0u&
1,'
z/'
0z&
1%'
z('
zD'
0~&
1]'
1v&
0:'
0='
1{&
03'
06'
12'
0S'
1N'
z0(
0{'
1&(
z)(
zE(
0!(
1^(
zs(
b1011 !
b1011 *
b1011 n&
1#(
0p(
1$(
0d(
1w'
0;(
0>(
1|'
04(
07(
13(
0T(
1O(
z1)
0|(
1')
z*)
zF)
0")
1_)
0?)
1}(
05)
08)
14)
0U)
1P)
1i*
0x)
1/*
z2*
0})
1(*
z+*
zG*
0#*
1`*
1y)
0=*
0@*
1~)
06*
09*
15*
0V*
1Q*
b1 j&
b1 y&
b1 z'
b1 {(
b1 |)
b1 %
b1 $
b1 (
#2
0('
0K'
1|&
0A'
0D'
1~&
0]'
0!'
1`'
1r'
0"'
1o'
0#'
1c'
0v&
1:'
z='
0{&
13'
z6'
02'
1@'
zS'
0N'
zZ'
0}&
1P'
1O'
0)(
0L(
1}'
0B(
0E(
1!(
0^(
0"(
1a(
1s(
0#(
1p(
0$(
1d(
0w'
1;(
z>(
0|'
14(
z7(
03(
1A(
zT(
0O(
z[(
0~'
1Q(
1P(
0*)
zn)
1$)
0q)
1&)
0k)
1y(
0J)
0M)
1~(
0C)
0F)
1")
0_)
0#)
1b)
z?)
0}(
15)
z8)
04)
1B)
zU)
0P)
z\)
0!)
1R)
1Q)
0+*
0N*
1!*
0D*
0G*
1#*
0`*
0$*
1c*
1u*
b100 !
b100 *
b100 n&
0%*
1r*
0&*
1f*
0y)
1=*
z@*
0~)
16*
z9*
05*
1C*
zV*
0Q*
z]*
0"*
1S*
1R*
b10 j&
b10 y&
b10 z'
b10 {(
b10 |)
b10 %
b10 $
b10 (
#3
z('
zK'
0|&
1A'
zD'
0~&
1]'
06'
12'
0Z'
1}&
0P'
0S'
1N'
z)(
zL(
0}'
1B(
zE(
0!(
1^(
07(
13(
0[(
1~'
0Q(
0T(
1O(
z*)
1n)
b0 !
b0 *
b0 n&
0$)
1q)
0&)
1k)
0y(
1J)
zM)
0~(
1C)
zF)
0")
1_)
08)
14)
0\)
1!)
0R)
0U)
1P)
z+*
zN*
0!*
1D*
zG*
0#*
1`*
09*
15*
0]*
1"*
0S*
0V*
1Q*
b11 j&
b11 y&
b11 z'
b11 {(
b11 |)
b11 %
b11 $
b11 (
#4
1V'
0+'
0:(
1H(
1;)
1I)
0.*
1J*
1H#
0R#
1K#
0v"
b100 r&
b100 u'
0g#
1p#
1;$
0f#
b110 q&
b110 v(
b110 p&
b110 w)
b1 )
b1 o&
b1 y*
0G'
0G&
0W$
1X$
0V$
1K
06
1<
19
0B
0E
0u
zo
0j
17
0^
1N
0X
1Q
08
0Q&
1R&
0P&
0_$
1Q"
0*"
18"
0)"
12"
z5"
ze"
zk"
1+"
0h"
1Y"
0\"
0_"
1Z"
0&"
1N"
0?"
1B"
1A"
0'"
b1101 +
b1101 E&
b1101 l&
1Z&
0[&
1Y&
1h$
zA#
0x"
1(#
0w"
1"#
0%#
0U#
1[#
1y"
0X#
0I#
1L#
zO#
0J#
1t"
0>#
1/#
02#
01#
1u"
0b&
b0 .
b0 S$
b0 k&
0r$
1s$
0q$
1y#
b1 3
0h#
1v#
0c#
1j#
0s#
1i#
0H$
18$
0B$
0E$
z?$
0:$
1d#
0.$
1|#
0($
1!$
0e#
b1010 s&
b1010 t&
1f'
1r'
0"'
1o'
0#'
1c'
0u&
1,'
0/'
1z&
0%'
0('
0D'
1~&
0]'
1!'
0`'
z6'
02'
0@'
zS'
0N'
zZ'
0}&
1P'
0O'
00(
1{'
0&(
0)(
0E(
1!(
0^(
1"(
0a(
z7(
03(
0A(
zT(
0O(
z[(
0~'
1Q(
0P(
01)
1|(
0')
0*)
0F)
1")
0_)
1#)
0b)
z8)
04)
0B)
zU)
0P)
z\)
0!)
1R)
0Q)
1i*
1u*
b0 !
b0 *
b0 n&
0%*
1r*
0&*
1f*
0x)
1/*
02*
1})
0(*
0+*
0G*
1#*
0`*
1$*
0c*
z9*
05*
0C*
zV*
0Q*
z]*
0"*
1S*
0R*
1M%
09%
1J%
06%
1;%
08%
1h%
0T%
1e%
0Q%
1V%
0S%
1o%
0"&
1m%
0x%
0n%
1@&
b100 ,
b100 4
b100 T$
b100 0%
b100 D&
0,&
1=&
0)&
1.&
0+&
1-%
1{
b1110 /
b1110 2
b1110 m&
b1110 x*
0;
1x
0i
1l
0k
11
b0 j&
b0 y&
b0 z'
b0 {(
b0 |)
b100 %
b100 $
b100 (
#5
z/'
0z&
1%'
z('
zD'
0~&
1]'
zr'
1"'
0o'
1#'
0c'
1v&
0:'
0='
1{&
03'
06'
12'
0S'
1N'
z0(
0{'
1&(
z)(
zE(
0!(
1^(
0>(
1|'
04(
07(
13(
0T(
1O(
z1)
0|(
1')
z*)
zF)
0")
1_)
zt)
1$)
0q)
1%)
0e)
1x(
0<)
0?)
1}(
05)
08)
14)
0U)
1P)
z2*
0})
1(*
z+*
zG*
0#*
1`*
zu*
b1101 !
b1101 *
b1101 n&
1%*
0r*
1&*
0f*
1y)
0=*
0@*
1~)
06*
09*
15*
0V*
1Q*
b1 j&
b1 y&
b1 z'
b1 {(
b1 |)
b101 %
b101 $
b101 (
#6
0('
0K'
1|&
0A'
0D'
1~&
0]'
0!'
1`'
1r'
0"'
1o'
0#'
1c'
0v&
1:'
z='
0{&
13'
z6'
02'
1@'
zS'
0N'
0$'
1i'
0x&
1W'
zZ'
0}&
1P'
1O'
0)(
zm(
1#(
0p(
1%(
0j(
1x'
0I(
0L(
1}'
0B(
0E(
1!(
0^(
0"(
1a(
z>(
0|'
14(
z7(
03(
1A(
zT(
0O(
z[(
0~'
1Q(
1P(
0*)
zn)
1&)
0k)
1y(
0J)
0M)
1~(
0C)
0F)
1")
0_)
0#)
1b)
1t)
1$)
0q)
0%)
1e)
0x(
1<)
z?)
0}(
15)
z8)
04)
1B)
zU)
0P)
z\)
0!)
1R)
1Q)
0+*
zo*
1'*
0l*
1z)
0K*
0N*
1!*
0D*
0G*
1#*
0`*
0$*
1c*
1u*
b1110 !
b1110 *
b1110 n&
1%*
0r*
0&*
1f*
0y)
1=*
z@*
0~)
16*
z9*
05*
1C*
zV*
0Q*
z]*
0"*
1S*
1R*
b10 j&
b10 y&
b10 z'
b10 {(
b10 |)
b110 %
b110 $
b110 (
#7
z('
zK'
0|&
1A'
zD'
0~&
1]'
06'
12'
1"'
0o'
1$'
0i'
1x&
0W'
0Z'
1}&
0P'
0S'
1N'
z)(
1m(
0#(
1p(
0%(
1j(
0x'
1I(
zL(
0}'
1B(
zE(
0!(
1^(
07(
13(
0[(
1~'
0Q(
0T(
1O(
z*)
1n)
0$)
1q)
0&)
1k)
0y(
1J)
zM)
0~(
1C)
zF)
0")
1_)
08)
14)
0\)
1!)
0R)
0U)
1P)
z+*
1o*
b1 !
b1 *
b1 n&
0%*
1r*
0'*
1l*
0z)
1K*
zN*
0!*
1D*
zG*
0#*
1`*
09*
15*
0]*
1"*
0S*
0V*
1Q*
b11 j&
b11 y&
b11 z'
b11 {(
b11 |)
b111 %
b111 $
b111 (
